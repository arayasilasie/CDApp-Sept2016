#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StagingdbCentralDepository")]
public partial class MainDataContextDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InserttblBankAccountType(tblBankAccountType instance);
  partial void UpdatetblBankAccountType(tblBankAccountType instance);
  partial void DeletetblBankAccountType(tblBankAccountType instance);
  partial void InserttblBankAccount(tblBankAccount instance);
  partial void UpdatetblBankAccount(tblBankAccount instance);
  partial void DeletetblBankAccount(tblBankAccount instance);
  partial void InserttblMembershipClassBankAccountType(tblMembershipClassBankAccountType instance);
  partial void UpdatetblMembershipClassBankAccountType(tblMembershipClassBankAccountType instance);
  partial void DeletetblMembershipClassBankAccountType(tblMembershipClassBankAccountType instance);
  partial void InserttblMCPWarehouseReceipt(tblMCPWarehouseReceipt instance);
  partial void UpdatetblMCPWarehouseReceipt(tblMCPWarehouseReceipt instance);
  partial void DeletetblMCPWarehouseReceipt(tblMCPWarehouseReceipt instance);
  partial void InserttblMCP(tblMCP instance);
  partial void UpdatetblMCP(tblMCP instance);
  partial void DeletetblMCP(tblMCP instance);
  partial void InserttblMCPBankAccount(tblMCPBankAccount instance);
  partial void UpdatetblMCPBankAccount(tblMCPBankAccount instance);
  partial void DeletetblMCPBankAccount(tblMCPBankAccount instance);
  partial void UpdatetblMemberTransaction(tblMemberTransaction instance);
  partial void DeletetblMemberTransaction(tblMemberTransaction instance);
  partial void UpdatetblBankAccountTransaction(tblBankAccountTransaction instance);
  partial void DeletetblBankAccountTransaction(tblBankAccountTransaction instance);
  partial void InserttblDNSnapshot(tblDNSnapshot instance);
  partial void UpdatetblDNSnapshot(tblDNSnapshot instance);
  partial void DeletetblDNSnapshot(tblDNSnapshot instance);
  partial void InserttblExceptionLog(tblExceptionLog instance);
  partial void UpdatetblExceptionLog(tblExceptionLog instance);
  partial void DeletetblExceptionLog(tblExceptionLog instance);
  #endregion
	
	public MainDataContextDataContext() : 
			base("Data Source=BusApCluster\\BusApInstance;Initial Catalog=dbCentralDepository;Persis" +
					"t Security Info=True;User ID=dbaccess;Password=AdminP99", mappingSource)
	{
		OnCreated();
	}
	
	public MainDataContextDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MainDataContextDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MainDataContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MainDataContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<tblBankAccountType> tblBankAccountTypes
	{
		get
		{
			return this.GetTable<tblBankAccountType>();
		}
	}
	
	public System.Data.Linq.Table<tblBankAccount> tblBankAccounts
	{
		get
		{
			return this.GetTable<tblBankAccount>();
		}
	}
	
	public System.Data.Linq.Table<tblMembershipClassBankAccountType> tblMembershipClassBankAccountTypes
	{
		get
		{
			return this.GetTable<tblMembershipClassBankAccountType>();
		}
	}
	
	public System.Data.Linq.Table<tblMCPWarehouseReceipt> tblMCPWarehouseReceipts
	{
		get
		{
			return this.GetTable<tblMCPWarehouseReceipt>();
		}
	}
	
	public System.Data.Linq.Table<tblMCP> tblMCPs
	{
		get
		{
			return this.GetTable<tblMCP>();
		}
	}
	
	public System.Data.Linq.Table<tblMCPBankAccount> tblMCPBankAccounts
	{
		get
		{
			return this.GetTable<tblMCPBankAccount>();
		}
	}
	
	public System.Data.Linq.Table<tblMemberTransaction> tblMemberTransactions
	{
		get
		{
			return this.GetTable<tblMemberTransaction>();
		}
	}
	
	public System.Data.Linq.Table<tblBankAccountTransaction> tblBankAccountTransactions
	{
		get
		{
			return this.GetTable<tblBankAccountTransaction>();
		}
	}
	
	public System.Data.Linq.Table<tblDNSnapshot> tblDNSnapshots
	{
		get
		{
			return this.GetTable<tblDNSnapshot>();
		}
	}
	
	public System.Data.Linq.Table<tblExceptionLog> tblExceptionLogs
	{
		get
		{
			return this.GetTable<tblExceptionLog>();
		}
	}
	
	private void InserttblMemberTransaction(tblMemberTransaction obj)
	{
		this.spMemberTransaction_Insert(((System.Nullable<System.Guid>)(obj.TransactionTypeId)), ((System.Nullable<System.Guid>)(obj.MemberId)), obj.TransactionNo, obj.MembershipTransactionNo);
	}
	
	private void InserttblBankAccountTransaction(tblBankAccountTransaction obj)
	{
		this.spBankAccountTransaction_Insert(((System.Nullable<System.Guid>)(obj.TransactionTypeId)), ((System.Nullable<System.Guid>)(obj.BankAccountId)), obj.TransactionNo);
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spCreateMCPBankAccount")]
	public ISingleResult<spCreateMCPBankAccountResult> spCreateMCPBankAccount([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MCPGuid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> mCPGuid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberGuid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> memberGuid)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mCPGuid, memberGuid);
		return ((ISingleResult<spCreateMCPBankAccountResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spCreateMCP")]
	public int spCreateMCP([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Timestamp", DbType="DateTime")] System.Nullable<System.DateTime> timestamp)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, timestamp);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spMemberTransaction_Insert")]
	public int spMemberTransaction_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionTypeId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> transactionTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> memberId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionNo", DbType="VarChar(50)")] string transactionNo, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MembershipTransactionNo", DbType="VarChar(50)")] string membershipTransactionNo)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), transactionTypeId, memberId, transactionNo, membershipTransactionNo);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spAccountTypesNotCreatedForMember")]
	public ISingleResult<spAccountTypesNotCreatedForMemberResult> spAccountTypesNotCreatedForMember([global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberID", DbType="UniqueIdentifier")] System.Nullable<System.Guid> memberID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberClass", DbType="Int")] System.Nullable<int> memberClass)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), memberID, memberClass);
		return ((ISingleResult<spAccountTypesNotCreatedForMemberResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spBankAccountTransaction_Insert")]
	public int spBankAccountTransaction_Insert([global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionTypeId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> transactionTypeId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankAccountId", DbType="UniqueIdentifier")] System.Nullable<System.Guid> bankAccountId, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="TransactionNo", DbType="VarChar(50)")] string transactionNo)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), transactionTypeId, bankAccountId, transactionNo);
		return ((int)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spInsertException")]
	public ISingleResult<spInsertExceptionResult> spInsertException([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Id", DbType="UniqueIdentifier")] System.Nullable<System.Guid> id, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExceptionDate", DbType="DateTime")] System.Nullable<System.DateTime> exceptionDate, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExceptionType", DbType="NVarChar(500)")] string exceptionType, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ShortMessage", DbType="NVarChar(1500)")] string shortMessage, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="FullMessage", DbType="NText")] string fullMessage, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserName", DbType="NVarChar(350)")] string userName, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="UserGuid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> userGuid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Remark", DbType="NText")] string remark)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, exceptionDate, exceptionType, shortMessage, fullMessage, userName, userGuid, remark);
		return ((ISingleResult<spInsertExceptionResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spCreateMCPWarehouseReceipt")]
	public ISingleResult<spCreateMCPWarehouseReceiptResult> spCreateMCPWarehouseReceipt(
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MCPGuid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> mCPGuid, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberGuid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> memberGuid, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberId", DbType="VarChar(20)")] string memberId, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberName", DbType="VarChar(100)")] string memberName, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientId", DbType="VarChar(20)")] string clientId, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientName", DbType="VarChar(100)")] string clientName, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsMember", DbType="Bit")] System.Nullable<bool> isMember, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WHR", DbType="Int")] System.Nullable<int> wHR, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommodityGrade", DbType="VarChar(100)")] string commodityGrade, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="CommodityGradeGuid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> commodityGradeGuid, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Warehouse", DbType="VarChar(100)")] string warehouse, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Quantity", DbType="Float")] System.Nullable<double> quantity, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ExpiryDate", DbType="DateTime")] System.Nullable<System.DateTime> expiryDate, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="DaysRemaining", DbType="Int")] System.Nullable<int> daysRemaining, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status", DbType="VarChar(20)")] string status, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="IsTradable", DbType="Bit")] System.Nullable<bool> isTradable, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="ProductionYear", DbType="Int")] System.Nullable<int> productionYear, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="WHRFStatus", DbType="VarChar(20)")] string wHRFStatus, 
				[global::System.Data.Linq.Mapping.ParameterAttribute(Name="GRNNumber", DbType="VarChar(50)")] string gRNNumber)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), mCPGuid, memberGuid, memberId, memberName, clientId, clientName, isMember, wHR, commodityGrade, commodityGradeGuid, warehouse, quantity, expiryDate, daysRemaining, status, isTradable, productionYear, wHRFStatus, gRNNumber);
		return ((ISingleResult<spCreateMCPWarehouseReceiptResult>)(result.ReturnValue));
	}
	
	[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.spIsAccountValid")]
	public ISingleResult<spIsAccountValidResult> spIsAccountValid([global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountGuid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> accountGuid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="MemberGuid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> memberGuid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ClientGuid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> clientGuid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankGuid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> bankGuid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="BankBranchGuids", DbType="VarChar(MAX)")] string bankBranchGuids, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountTypeGuid", DbType="UniqueIdentifier")] System.Nullable<System.Guid> accountTypeGuid, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="AccountNumber", DbType="VarChar(20)")] string accountNumber, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Error", DbType="VarChar(200)")] ref string error)
	{
		IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), accountGuid, memberGuid, clientGuid, bankGuid, bankBranchGuids, accountTypeGuid, accountNumber, error);
		error = ((string)(result.GetParameterValue(7)));
		return ((ISingleResult<spIsAccountValidResult>)(result.ReturnValue));
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBankAccountTypes")]
public partial class tblBankAccountType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ID;
	
	private string _Name;
	
	private string _Description;
	
	private byte _IsActive;
	
	private System.Guid _CreatedBy;
	
	private System.DateTime _CreatedDate;
	
	private System.Nullable<System.Guid> _UpdatedBy;
	
	private System.Nullable<System.DateTime> _UpdatedDate;
	
	private bool _IsClient;
	
	private EntitySet<tblBankAccount> _tblBankAccounts;
	
	private EntityRef<tblMembershipClassBankAccountType> _tblMembershipClassBankAccountType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnCreatedByChanging(System.Guid value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnIsClientChanging(bool value);
    partial void OnIsClientChanged();
    #endregion
	
	public tblBankAccountType()
	{
		this._tblBankAccounts = new EntitySet<tblBankAccount>(new Action<tblBankAccount>(this.attach_tblBankAccounts), new Action<tblBankAccount>(this.detach_tblBankAccounts));
		this._tblMembershipClassBankAccountType = default(EntityRef<tblMembershipClassBankAccountType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				if (this._tblMembershipClassBankAccountType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this.OnDescriptionChanging(value);
				this.SendPropertyChanging();
				this._Description = value;
				this.SendPropertyChanged("Description");
				this.OnDescriptionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsActive", DbType="tinyint NOT NULL")]
	public byte Status
	{
		get
		{
			return this._IsActive;
		}
		set
		{
			if ((this._IsActive != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._IsActive = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UpdatedBy
	{
		get
		{
			return this._UpdatedBy;
		}
		set
		{
			if ((this._UpdatedBy != value))
			{
				this.OnUpdatedByChanging(value);
				this.SendPropertyChanging();
				this._UpdatedBy = value;
				this.SendPropertyChanged("UpdatedBy");
				this.OnUpdatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdatedDate
	{
		get
		{
			return this._UpdatedDate;
		}
		set
		{
			if ((this._UpdatedDate != value))
			{
				this.OnUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._UpdatedDate = value;
				this.SendPropertyChanged("UpdatedDate");
				this.OnUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsClient", DbType="bit")]
	public bool IsClient
	{
		get
		{
			return this._IsClient;
		}
		set
		{
			if ((this._IsClient != value))
			{
				this.OnIsClientChanging(value);
				this.SendPropertyChanging();
				this._IsClient = value;
				this.SendPropertyChanged("IsClient");
				this.OnIsClientChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBankAccountType_tblBankAccount", Storage="_tblBankAccounts", ThisKey="ID", OtherKey="AccountTypeID")]
	public EntitySet<tblBankAccount> tblBankAccounts
	{
		get
		{
			return this._tblBankAccounts;
		}
		set
		{
			this._tblBankAccounts.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMembershipClassBankAccountType_tblBankAccountType", Storage="_tblMembershipClassBankAccountType", ThisKey="ID", OtherKey="AccountTypeID", IsForeignKey=true)]
	public tblMembershipClassBankAccountType tblMembershipClassBankAccountType
	{
		get
		{
			return this._tblMembershipClassBankAccountType.Entity;
		}
		set
		{
			tblMembershipClassBankAccountType previousValue = this._tblMembershipClassBankAccountType.Entity;
			if (((previousValue != value) 
						|| (this._tblMembershipClassBankAccountType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblMembershipClassBankAccountType.Entity = null;
					previousValue.tblBankAccountTypes.Remove(this);
				}
				this._tblMembershipClassBankAccountType.Entity = value;
				if ((value != null))
				{
					value.tblBankAccountTypes.Add(this);
					this._ID = value.AccountTypeID;
				}
				else
				{
					this._ID = default(System.Guid);
				}
				this.SendPropertyChanged("tblMembershipClassBankAccountType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblBankAccounts(tblBankAccount entity)
	{
		this.SendPropertyChanging();
		entity.tblBankAccountType = this;
	}
	
	private void detach_tblBankAccounts(tblBankAccount entity)
	{
		this.SendPropertyChanging();
		entity.tblBankAccountType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBankAccount")]
public partial class tblBankAccount : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ID;
	
	private System.Guid _BankID;
	
	private System.Guid _MemberID;
	
	private System.Guid _AccountTypeID;
	
	private string _AccountNumber;
	
	private byte _Status;
	
	private double _Balance;
	
	private System.DateTime _BalanceUpdatedDate;
	
	private System.Nullable<double> _PreviousBalance;
	
	private System.Guid _CreatedBy;
	
	private System.DateTime _CreatedDate;
	
	private System.Nullable<System.Guid> _UpdatedBy;
	
	private System.Nullable<System.DateTime> _UpdatedDate;
	
	private System.DateTime _DocumentPresentedTimeStamp;
	
	private System.Nullable<System.Guid> _ClientID;
	
	private EntitySet<tblBankAccountTransaction> _tblBankAccountTransactions;
	
	private EntityRef<tblBankAccountType> _tblBankAccountType;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnBankBranchIDChanging(System.Guid value);
    partial void OnBankBranchIDChanged();
    partial void OnMemberIDChanging(System.Guid value);
    partial void OnMemberIDChanged();
    partial void OnAccountTypeIDChanging(System.Guid value);
    partial void OnAccountTypeIDChanged();
    partial void OnAccountNumberChanging(string value);
    partial void OnAccountNumberChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnBalanceChanging(double value);
    partial void OnBalanceChanged();
    partial void OnBalanceUpdatedDateChanging(System.DateTime value);
    partial void OnBalanceUpdatedDateChanged();
    partial void OnPreviousBalanceChanging(System.Nullable<double> value);
    partial void OnPreviousBalanceChanged();
    partial void OnCreatedByChanging(System.Guid value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnDocumentPresentedTimeStampChanging(System.DateTime value);
    partial void OnDocumentPresentedTimeStampChanged();
    partial void OnClientIdChanging(System.Nullable<System.Guid> value);
    partial void OnClientIdChanged();
    #endregion
	
	public tblBankAccount()
	{
		this._tblBankAccountTransactions = new EntitySet<tblBankAccountTransaction>(new Action<tblBankAccountTransaction>(this.attach_tblBankAccountTransactions), new Action<tblBankAccountTransaction>(this.detach_tblBankAccountTransactions));
		this._tblBankAccountType = default(EntityRef<tblBankAccountType>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid BankBranchID
	{
		get
		{
			return this._BankID;
		}
		set
		{
			if ((this._BankID != value))
			{
				this.OnBankBranchIDChanging(value);
				this.SendPropertyChanging();
				this._BankID = value;
				this.SendPropertyChanged("BankBranchID");
				this.OnBankBranchIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid MemberID
	{
		get
		{
			return this._MemberID;
		}
		set
		{
			if ((this._MemberID != value))
			{
				this.OnMemberIDChanging(value);
				this.SendPropertyChanging();
				this._MemberID = value;
				this.SendPropertyChanged("MemberID");
				this.OnMemberIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid AccountTypeID
	{
		get
		{
			return this._AccountTypeID;
		}
		set
		{
			if ((this._AccountTypeID != value))
			{
				if (this._tblBankAccountType.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnAccountTypeIDChanging(value);
				this.SendPropertyChanging();
				this._AccountTypeID = value;
				this.SendPropertyChanged("AccountTypeID");
				this.OnAccountTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountNumber", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string AccountNumber
	{
		get
		{
			return this._AccountNumber;
		}
		set
		{
			if ((this._AccountNumber != value))
			{
				this.OnAccountNumberChanging(value);
				this.SendPropertyChanging();
				this._AccountNumber = value;
				this.SendPropertyChanged("AccountNumber");
				this.OnAccountNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
	public byte Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Float NOT NULL")]
	public double Balance
	{
		get
		{
			return this._Balance;
		}
		set
		{
			if ((this._Balance != value))
			{
				this.OnBalanceChanging(value);
				this.SendPropertyChanging();
				this._Balance = value;
				this.SendPropertyChanged("Balance");
				this.OnBalanceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BalanceUpdatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime BalanceUpdatedDate
	{
		get
		{
			return this._BalanceUpdatedDate;
		}
		set
		{
			if ((this._BalanceUpdatedDate != value))
			{
				this.OnBalanceUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._BalanceUpdatedDate = value;
				this.SendPropertyChanged("BalanceUpdatedDate");
				this.OnBalanceUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PreviousBalance", DbType="Float")]
	public System.Nullable<double> PreviousBalance
	{
		get
		{
			return this._PreviousBalance;
		}
		set
		{
			if ((this._PreviousBalance != value))
			{
				this.OnPreviousBalanceChanging(value);
				this.SendPropertyChanging();
				this._PreviousBalance = value;
				this.SendPropertyChanged("PreviousBalance");
				this.OnPreviousBalanceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UpdatedBy
	{
		get
		{
			return this._UpdatedBy;
		}
		set
		{
			if ((this._UpdatedBy != value))
			{
				this.OnUpdatedByChanging(value);
				this.SendPropertyChanging();
				this._UpdatedBy = value;
				this.SendPropertyChanged("UpdatedBy");
				this.OnUpdatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdatedDate
	{
		get
		{
			return this._UpdatedDate;
		}
		set
		{
			if ((this._UpdatedDate != value))
			{
				this.OnUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._UpdatedDate = value;
				this.SendPropertyChanged("UpdatedDate");
				this.OnUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DocumentPresentedTimeStamp", DbType="Datetime")]
	public System.DateTime DocumentPresentedTimeStamp
	{
		get
		{
			return this._DocumentPresentedTimeStamp;
		}
		set
		{
			if ((this._DocumentPresentedTimeStamp != value))
			{
				this.OnDocumentPresentedTimeStampChanging(value);
				this.SendPropertyChanging();
				this._DocumentPresentedTimeStamp = value;
				this.SendPropertyChanged("DocumentPresentedTimeStamp");
				this.OnDocumentPresentedTimeStampChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> ClientId
	{
		get
		{
			return this._ClientID;
		}
		set
		{
			if ((this._ClientID != value))
			{
				this.OnClientIdChanging(value);
				this.SendPropertyChanging();
				this._ClientID = value;
				this.SendPropertyChanged("ClientId");
				this.OnClientIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBankAccount_tblBankAccountTransaction", Storage="_tblBankAccountTransactions", ThisKey="ID", OtherKey="BankAccountId")]
	public EntitySet<tblBankAccountTransaction> tblBankAccountTransactions
	{
		get
		{
			return this._tblBankAccountTransactions;
		}
		set
		{
			this._tblBankAccountTransactions.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBankAccountType_tblBankAccount", Storage="_tblBankAccountType", ThisKey="AccountTypeID", OtherKey="ID", IsForeignKey=true)]
	public tblBankAccountType tblBankAccountType
	{
		get
		{
			return this._tblBankAccountType.Entity;
		}
		set
		{
			tblBankAccountType previousValue = this._tblBankAccountType.Entity;
			if (((previousValue != value) 
						|| (this._tblBankAccountType.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblBankAccountType.Entity = null;
					previousValue.tblBankAccounts.Remove(this);
				}
				this._tblBankAccountType.Entity = value;
				if ((value != null))
				{
					value.tblBankAccounts.Add(this);
					this._AccountTypeID = value.ID;
				}
				else
				{
					this._AccountTypeID = default(System.Guid);
				}
				this.SendPropertyChanged("tblBankAccountType");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblBankAccountTransactions(tblBankAccountTransaction entity)
	{
		this.SendPropertyChanging();
		entity.tblBankAccount = this;
	}
	
	private void detach_tblBankAccountTransactions(tblBankAccountTransaction entity)
	{
		this.SendPropertyChanging();
		entity.tblBankAccount = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMembershipClassBankAccountTypes")]
public partial class tblMembershipClassBankAccountType : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ID;
	
	private System.Guid _AccountTypeID;
	
	private int _MembershipClassID;
	
	private bool _IsMandatory;
	
	private byte _Status;
	
	private System.Guid _CreatedBy;
	
	private System.DateTime _CreatedDate;
	
	private System.Nullable<System.Guid> _UpdatedBy;
	
	private System.Nullable<System.DateTime> _UpdatedDate;
	
	private EntitySet<tblBankAccountType> _tblBankAccountTypes;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnAccountTypeIDChanging(System.Guid value);
    partial void OnAccountTypeIDChanged();
    partial void OnMembershipClassIDChanging(int value);
    partial void OnMembershipClassIDChanged();
    partial void OnIsMandatoryChanging(bool value);
    partial void OnIsMandatoryChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnCreatedByChanging(System.Guid value);
    partial void OnCreatedByChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    partial void OnUpdatedByChanging(System.Nullable<System.Guid> value);
    partial void OnUpdatedByChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    #endregion
	
	public tblMembershipClassBankAccountType()
	{
		this._tblBankAccountTypes = new EntitySet<tblBankAccountType>(new Action<tblBankAccountType>(this.attach_tblBankAccountTypes), new Action<tblBankAccountType>(this.detach_tblBankAccountTypes));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountTypeID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid AccountTypeID
	{
		get
		{
			return this._AccountTypeID;
		}
		set
		{
			if ((this._AccountTypeID != value))
			{
				this.OnAccountTypeIDChanging(value);
				this.SendPropertyChanging();
				this._AccountTypeID = value;
				this.SendPropertyChanged("AccountTypeID");
				this.OnAccountTypeIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipClassID", DbType="int NOT NULL")]
	public int MembershipClassID
	{
		get
		{
			return this._MembershipClassID;
		}
		set
		{
			if ((this._MembershipClassID != value))
			{
				this.OnMembershipClassIDChanging(value);
				this.SendPropertyChanging();
				this._MembershipClassID = value;
				this.SendPropertyChanged("MembershipClassID");
				this.OnMembershipClassIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMandatory", DbType="Bit NOT NULL")]
	public bool IsMandatory
	{
		get
		{
			return this._IsMandatory;
		}
		set
		{
			if ((this._IsMandatory != value))
			{
				this.OnIsMandatoryChanging(value);
				this.SendPropertyChanging();
				this._IsMandatory = value;
				this.SendPropertyChanged("IsMandatory");
				this.OnIsMandatoryChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="tinyint NOT NULL")]
	public byte Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedBy", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid CreatedBy
	{
		get
		{
			return this._CreatedBy;
		}
		set
		{
			if ((this._CreatedBy != value))
			{
				this.OnCreatedByChanging(value);
				this.SendPropertyChanging();
				this._CreatedBy = value;
				this.SendPropertyChanged("CreatedBy");
				this.OnCreatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
	public System.DateTime CreatedDate
	{
		get
		{
			return this._CreatedDate;
		}
		set
		{
			if ((this._CreatedDate != value))
			{
				this.OnCreatedDateChanging(value);
				this.SendPropertyChanging();
				this._CreatedDate = value;
				this.SendPropertyChanged("CreatedDate");
				this.OnCreatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedBy", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UpdatedBy
	{
		get
		{
			return this._UpdatedBy;
		}
		set
		{
			if ((this._UpdatedBy != value))
			{
				this.OnUpdatedByChanging(value);
				this.SendPropertyChanging();
				this._UpdatedBy = value;
				this.SendPropertyChanged("UpdatedBy");
				this.OnUpdatedByChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UpdatedDate", DbType="DateTime")]
	public System.Nullable<System.DateTime> UpdatedDate
	{
		get
		{
			return this._UpdatedDate;
		}
		set
		{
			if ((this._UpdatedDate != value))
			{
				this.OnUpdatedDateChanging(value);
				this.SendPropertyChanging();
				this._UpdatedDate = value;
				this.SendPropertyChanged("UpdatedDate");
				this.OnUpdatedDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMembershipClassBankAccountType_tblBankAccountType", Storage="_tblBankAccountTypes", ThisKey="AccountTypeID", OtherKey="ID")]
	public EntitySet<tblBankAccountType> tblBankAccountTypes
	{
		get
		{
			return this._tblBankAccountTypes;
		}
		set
		{
			this._tblBankAccountTypes.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblBankAccountTypes(tblBankAccountType entity)
	{
		this.SendPropertyChanging();
		entity.tblMembershipClassBankAccountType = this;
	}
	
	private void detach_tblBankAccountTypes(tblBankAccountType entity)
	{
		this.SendPropertyChanging();
		entity.tblMembershipClassBankAccountType = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMCPWarehouseReceipt")]
public partial class tblMCPWarehouseReceipt : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _MCPId;
	
	private System.Guid _MemberGuid;
	
	private string _MemberId;
	
	private string _MemberName;
	
	private string _ClientId;
	
	private string _ClientName;
	
	private bool _IsMember;
	
	private int _WHR;
	
	private string _CommodityGrade;
	
	private System.Guid _CommodityGradeGuid;
	
	private string _Warehouse;
	
	private double _Quantity;
	
	private System.DateTime _ExpiryDate;
	
	private int _DaysRemaining;
	
	private string _Status;
	
	private bool _IsTradable;
	
	private int _ProductionYear;
	
	private string _WHRFStatus;
	
	private string _GRNNumber;
	
	private EntitySet<tblMCP> _tblMCPs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMCPIdChanging(System.Guid value);
    partial void OnMCPIdChanged();
    partial void OnMemberGuidChanging(System.Guid value);
    partial void OnMemberGuidChanged();
    partial void OnMemberIdChanging(string value);
    partial void OnMemberIdChanged();
    partial void OnMemberNameChanging(string value);
    partial void OnMemberNameChanged();
    partial void OnClientIdChanging(string value);
    partial void OnClientIdChanged();
    partial void OnClientNameChanging(string value);
    partial void OnClientNameChanged();
    partial void OnIsMemberChanging(bool value);
    partial void OnIsMemberChanged();
    partial void OnWHRChanging(int value);
    partial void OnWHRChanged();
    partial void OnCommodityGradeChanging(string value);
    partial void OnCommodityGradeChanged();
    partial void OnCommodityGradeGuidChanging(System.Guid value);
    partial void OnCommodityGradeGuidChanged();
    partial void OnWarehouseChanging(string value);
    partial void OnWarehouseChanged();
    partial void OnQuantityChanging(double value);
    partial void OnQuantityChanged();
    partial void OnExpiryDateChanging(System.DateTime value);
    partial void OnExpiryDateChanged();
    partial void OnDaysRemainingChanging(int value);
    partial void OnDaysRemainingChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnIsTradableChanging(bool value);
    partial void OnIsTradableChanged();
    partial void OnProductionYearChanging(int value);
    partial void OnProductionYearChanged();
    partial void OnWHRFStatusChanging(string value);
    partial void OnWHRFStatusChanged();
    partial void OnGRNNumberChanging(string value);
    partial void OnGRNNumberChanged();
    #endregion
	
	public tblMCPWarehouseReceipt()
	{
		this._tblMCPs = new EntitySet<tblMCP>(new Action<tblMCP>(this.attach_tblMCPs), new Action<tblMCP>(this.detach_tblMCPs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCPId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid MCPId
	{
		get
		{
			return this._MCPId;
		}
		set
		{
			if ((this._MCPId != value))
			{
				this.OnMCPIdChanging(value);
				this.SendPropertyChanging();
				this._MCPId = value;
				this.SendPropertyChanged("MCPId");
				this.OnMCPIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid MemberGuid
	{
		get
		{
			return this._MemberGuid;
		}
		set
		{
			if ((this._MemberGuid != value))
			{
				this.OnMemberGuidChanging(value);
				this.SendPropertyChanging();
				this._MemberGuid = value;
				this.SendPropertyChanged("MemberGuid");
				this.OnMemberGuidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string MemberId
	{
		get
		{
			return this._MemberId;
		}
		set
		{
			if ((this._MemberId != value))
			{
				this.OnMemberIdChanging(value);
				this.SendPropertyChanging();
				this._MemberId = value;
				this.SendPropertyChanged("MemberId");
				this.OnMemberIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string MemberName
	{
		get
		{
			return this._MemberName;
		}
		set
		{
			if ((this._MemberName != value))
			{
				this.OnMemberNameChanging(value);
				this.SendPropertyChanging();
				this._MemberName = value;
				this.SendPropertyChanged("MemberName");
				this.OnMemberNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientId", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string ClientId
	{
		get
		{
			return this._ClientId;
		}
		set
		{
			if ((this._ClientId != value))
			{
				this.OnClientIdChanging(value);
				this.SendPropertyChanging();
				this._ClientId = value;
				this.SendPropertyChanged("ClientId");
				this.OnClientIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string ClientName
	{
		get
		{
			return this._ClientName;
		}
		set
		{
			if ((this._ClientName != value))
			{
				this.OnClientNameChanging(value);
				this.SendPropertyChanging();
				this._ClientName = value;
				this.SendPropertyChanged("ClientName");
				this.OnClientNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsMember", DbType="Bit NOT NULL")]
	public bool IsMember
	{
		get
		{
			return this._IsMember;
		}
		set
		{
			if ((this._IsMember != value))
			{
				this.OnIsMemberChanging(value);
				this.SendPropertyChanging();
				this._IsMember = value;
				this.SendPropertyChanged("IsMember");
				this.OnIsMemberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WHR", DbType="Int NOT NULL")]
	public int WHR
	{
		get
		{
			return this._WHR;
		}
		set
		{
			if ((this._WHR != value))
			{
				this.OnWHRChanging(value);
				this.SendPropertyChanging();
				this._WHR = value;
				this.SendPropertyChanged("WHR");
				this.OnWHRChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommodityGrade", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string CommodityGrade
	{
		get
		{
			return this._CommodityGrade;
		}
		set
		{
			if ((this._CommodityGrade != value))
			{
				this.OnCommodityGradeChanging(value);
				this.SendPropertyChanging();
				this._CommodityGrade = value;
				this.SendPropertyChanged("CommodityGrade");
				this.OnCommodityGradeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommodityGradeGuid", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid CommodityGradeGuid
	{
		get
		{
			return this._CommodityGradeGuid;
		}
		set
		{
			if ((this._CommodityGradeGuid != value))
			{
				this.OnCommodityGradeGuidChanging(value);
				this.SendPropertyChanging();
				this._CommodityGradeGuid = value;
				this.SendPropertyChanged("CommodityGradeGuid");
				this.OnCommodityGradeGuidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warehouse", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
	public string Warehouse
	{
		get
		{
			return this._Warehouse;
		}
		set
		{
			if ((this._Warehouse != value))
			{
				this.OnWarehouseChanging(value);
				this.SendPropertyChanging();
				this._Warehouse = value;
				this.SendPropertyChanged("Warehouse");
				this.OnWarehouseChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Float NOT NULL")]
	public double Quantity
	{
		get
		{
			return this._Quantity;
		}
		set
		{
			if ((this._Quantity != value))
			{
				this.OnQuantityChanging(value);
				this.SendPropertyChanging();
				this._Quantity = value;
				this.SendPropertyChanged("Quantity");
				this.OnQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExpiryDate", DbType="DateTime NOT NULL")]
	public System.DateTime ExpiryDate
	{
		get
		{
			return this._ExpiryDate;
		}
		set
		{
			if ((this._ExpiryDate != value))
			{
				this.OnExpiryDateChanging(value);
				this.SendPropertyChanging();
				this._ExpiryDate = value;
				this.SendPropertyChanged("ExpiryDate");
				this.OnExpiryDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DaysRemaining", DbType="Int NOT NULL")]
	public int DaysRemaining
	{
		get
		{
			return this._DaysRemaining;
		}
		set
		{
			if ((this._DaysRemaining != value))
			{
				this.OnDaysRemainingChanging(value);
				this.SendPropertyChanging();
				this._DaysRemaining = value;
				this.SendPropertyChanged("DaysRemaining");
				this.OnDaysRemainingChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string Status
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnStatusChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("Status");
				this.OnStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsTradable", DbType="bit")]
	public bool IsTradable
	{
		get
		{
			return this._IsTradable;
		}
		set
		{
			if ((this._IsTradable != value))
			{
				this.OnIsTradableChanging(value);
				this.SendPropertyChanging();
				this._IsTradable = value;
				this.SendPropertyChanged("IsTradable");
				this.OnIsTradableChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProductionYear", DbType="int")]
	public int ProductionYear
	{
		get
		{
			return this._ProductionYear;
		}
		set
		{
			if ((this._ProductionYear != value))
			{
				this.OnProductionYearChanging(value);
				this.SendPropertyChanging();
				this._ProductionYear = value;
				this.SendPropertyChanged("ProductionYear");
				this.OnProductionYearChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WHRFStatus", DbType="varchar(20)", CanBeNull=false)]
	public string WHRFStatus
	{
		get
		{
			return this._WHRFStatus;
		}
		set
		{
			if ((this._WHRFStatus != value))
			{
				this.OnWHRFStatusChanging(value);
				this.SendPropertyChanging();
				this._WHRFStatus = value;
				this.SendPropertyChanged("WHRFStatus");
				this.OnWHRFStatusChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GRNNumber", DbType="varchar(50)", CanBeNull=false)]
	public string GRNNumber
	{
		get
		{
			return this._GRNNumber;
		}
		set
		{
			if ((this._GRNNumber != value))
			{
				this.OnGRNNumberChanging(value);
				this.SendPropertyChanging();
				this._GRNNumber = value;
				this.SendPropertyChanged("GRNNumber");
				this.OnGRNNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMCPWarehouseReceipt_tblMCP", Storage="_tblMCPs", ThisKey="MCPId", OtherKey="Id")]
	public EntitySet<tblMCP> tblMCPs
	{
		get
		{
			return this._tblMCPs;
		}
		set
		{
			this._tblMCPs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblMCPs(tblMCP entity)
	{
		this.SendPropertyChanging();
		entity.tblMCPWarehouseReceipt = this;
	}
	
	private void detach_tblMCPs(tblMCP entity)
	{
		this.SendPropertyChanging();
		entity.tblMCPWarehouseReceipt = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMCP")]
public partial class tblMCP : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _Id;
	
	private System.DateTime _GeneratedTimestamp;
	
	private char _Session;
	
	private EntityRef<tblMCPWarehouseReceipt> _tblMCPWarehouseReceipt;
	
	private EntityRef<tblMCPBankAccount> _tblMCPBankAccount;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnGeneratedTimestampChanging(System.DateTime value);
    partial void OnGeneratedTimestampChanged();
    partial void OnSessionChanging(char value);
    partial void OnSessionChanged();
    #endregion
	
	public tblMCP()
	{
		this._tblMCPWarehouseReceipt = default(EntityRef<tblMCPWarehouseReceipt>);
		this._tblMCPBankAccount = default(EntityRef<tblMCPBankAccount>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				if ((this._tblMCPWarehouseReceipt.HasLoadedOrAssignedValue || this._tblMCPBankAccount.HasLoadedOrAssignedValue))
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneratedTimestamp", DbType="DateTime NOT NULL")]
	public System.DateTime GeneratedTimestamp
	{
		get
		{
			return this._GeneratedTimestamp;
		}
		set
		{
			if ((this._GeneratedTimestamp != value))
			{
				this.OnGeneratedTimestampChanging(value);
				this.SendPropertyChanging();
				this._GeneratedTimestamp = value;
				this.SendPropertyChanged("GeneratedTimestamp");
				this.OnGeneratedTimestampChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Session", DbType="Char(1) NOT NULL")]
	public char Session
	{
		get
		{
			return this._Session;
		}
		set
		{
			if ((this._Session != value))
			{
				this.OnSessionChanging(value);
				this.SendPropertyChanging();
				this._Session = value;
				this.SendPropertyChanged("Session");
				this.OnSessionChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMCPWarehouseReceipt_tblMCP", Storage="_tblMCPWarehouseReceipt", ThisKey="Id", OtherKey="MCPId", IsForeignKey=true)]
	public tblMCPWarehouseReceipt tblMCPWarehouseReceipt
	{
		get
		{
			return this._tblMCPWarehouseReceipt.Entity;
		}
		set
		{
			tblMCPWarehouseReceipt previousValue = this._tblMCPWarehouseReceipt.Entity;
			if (((previousValue != value) 
						|| (this._tblMCPWarehouseReceipt.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblMCPWarehouseReceipt.Entity = null;
					previousValue.tblMCPs.Remove(this);
				}
				this._tblMCPWarehouseReceipt.Entity = value;
				if ((value != null))
				{
					value.tblMCPs.Add(this);
					this._Id = value.MCPId;
				}
				else
				{
					this._Id = default(System.Guid);
				}
				this.SendPropertyChanged("tblMCPWarehouseReceipt");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMCPBankAccount_tblMCP", Storage="_tblMCPBankAccount", ThisKey="Id", OtherKey="MCPId", IsForeignKey=true)]
	public tblMCPBankAccount tblMCPBankAccount
	{
		get
		{
			return this._tblMCPBankAccount.Entity;
		}
		set
		{
			tblMCPBankAccount previousValue = this._tblMCPBankAccount.Entity;
			if (((previousValue != value) 
						|| (this._tblMCPBankAccount.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblMCPBankAccount.Entity = null;
					previousValue.tblMCPs.Remove(this);
				}
				this._tblMCPBankAccount.Entity = value;
				if ((value != null))
				{
					value.tblMCPs.Add(this);
					this._Id = value.MCPId;
				}
				else
				{
					this._Id = default(System.Guid);
				}
				this.SendPropertyChanged("tblMCPBankAccount");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMCPBankAccount")]
public partial class tblMCPBankAccount : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _MCPId;
	
	private System.Guid _MemberGuid;
	
	private string _AccountType;
	
	private double _Balance;
	
	private EntitySet<tblMCP> _tblMCPs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMCPIdChanging(System.Guid value);
    partial void OnMCPIdChanged();
    partial void OnMemberGuidChanging(System.Guid value);
    partial void OnMemberGuidChanged();
    partial void OnAccountTypeChanging(string value);
    partial void OnAccountTypeChanged();
    partial void OnBalanceChanging(double value);
    partial void OnBalanceChanged();
    #endregion
	
	public tblMCPBankAccount()
	{
		this._tblMCPs = new EntitySet<tblMCP>(new Action<tblMCP>(this.attach_tblMCPs), new Action<tblMCP>(this.detach_tblMCPs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MCPId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid MCPId
	{
		get
		{
			return this._MCPId;
		}
		set
		{
			if ((this._MCPId != value))
			{
				this.OnMCPIdChanging(value);
				this.SendPropertyChanging();
				this._MCPId = value;
				this.SendPropertyChanged("MCPId");
				this.OnMCPIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberGuid", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid MemberGuid
	{
		get
		{
			return this._MemberGuid;
		}
		set
		{
			if ((this._MemberGuid != value))
			{
				this.OnMemberGuidChanging(value);
				this.SendPropertyChanging();
				this._MemberGuid = value;
				this.SendPropertyChanged("MemberGuid");
				this.OnMemberGuidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string AccountType
	{
		get
		{
			return this._AccountType;
		}
		set
		{
			if ((this._AccountType != value))
			{
				this.OnAccountTypeChanging(value);
				this.SendPropertyChanging();
				this._AccountType = value;
				this.SendPropertyChanged("AccountType");
				this.OnAccountTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Balance", DbType="Float NOT NULL")]
	public double Balance
	{
		get
		{
			return this._Balance;
		}
		set
		{
			if ((this._Balance != value))
			{
				this.OnBalanceChanging(value);
				this.SendPropertyChanging();
				this._Balance = value;
				this.SendPropertyChanged("Balance");
				this.OnBalanceChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblMCPBankAccount_tblMCP", Storage="_tblMCPs", ThisKey="MCPId", OtherKey="Id")]
	public EntitySet<tblMCP> tblMCPs
	{
		get
		{
			return this._tblMCPs;
		}
		set
		{
			this._tblMCPs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_tblMCPs(tblMCP entity)
	{
		this.SendPropertyChanging();
		entity.tblMCPBankAccount = this;
	}
	
	private void detach_tblMCPs(tblMCP entity)
	{
		this.SendPropertyChanging();
		entity.tblMCPBankAccount = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblMemberTransaction")]
public partial class tblMemberTransaction : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _Id;
	
	private System.Guid _TransactionTypeId;
	
	private System.Guid _MemberId;
	
	private string _TransactionNo;
	
	private string _MembershipTransactionNo;
	
	private System.DateTime _Timestamp;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnTransactionTypeIdChanging(System.Guid value);
    partial void OnTransactionTypeIdChanged();
    partial void OnMemberIdChanging(System.Guid value);
    partial void OnMemberIdChanged();
    partial void OnTransactionNoChanging(string value);
    partial void OnTransactionNoChanged();
    partial void OnMembershipTransactionNoChanging(string value);
    partial void OnMembershipTransactionNoChanged();
    partial void OnTimestampChanging(System.DateTime value);
    partial void OnTimestampChanged();
    #endregion
	
	public tblMemberTransaction()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid TransactionTypeId
	{
		get
		{
			return this._TransactionTypeId;
		}
		set
		{
			if ((this._TransactionTypeId != value))
			{
				this.OnTransactionTypeIdChanging(value);
				this.SendPropertyChanging();
				this._TransactionTypeId = value;
				this.SendPropertyChanged("TransactionTypeId");
				this.OnTransactionTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid MemberId
	{
		get
		{
			return this._MemberId;
		}
		set
		{
			if ((this._MemberId != value))
			{
				this.OnMemberIdChanging(value);
				this.SendPropertyChanging();
				this._MemberId = value;
				this.SendPropertyChanged("MemberId");
				this.OnMemberIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string TransactionNo
	{
		get
		{
			return this._TransactionNo;
		}
		set
		{
			if ((this._TransactionNo != value))
			{
				this.OnTransactionNoChanging(value);
				this.SendPropertyChanging();
				this._TransactionNo = value;
				this.SendPropertyChanged("TransactionNo");
				this.OnTransactionNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MembershipTransactionNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string MembershipTransactionNo
	{
		get
		{
			return this._MembershipTransactionNo;
		}
		set
		{
			if ((this._MembershipTransactionNo != value))
			{
				this.OnMembershipTransactionNoChanging(value);
				this.SendPropertyChanging();
				this._MembershipTransactionNo = value;
				this.SendPropertyChanged("MembershipTransactionNo");
				this.OnMembershipTransactionNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Timestamp", DbType="DateTime NOT NULL")]
	public System.DateTime Timestamp
	{
		get
		{
			return this._Timestamp;
		}
		set
		{
			if ((this._Timestamp != value))
			{
				this.OnTimestampChanging(value);
				this.SendPropertyChanging();
				this._Timestamp = value;
				this.SendPropertyChanged("Timestamp");
				this.OnTimestampChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblBankAccountTransaction")]
public partial class tblBankAccountTransaction : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _Id;
	
	private System.Guid _TransactionTypeId;
	
	private System.Guid _BankAccountId;
	
	private string _TransactionNo;
	
	private bool _Status;
	
	private EntityRef<tblBankAccount> _tblBankAccount;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnTransactionTypeIdChanging(System.Guid value);
    partial void OnTransactionTypeIdChanged();
    partial void OnBankAccountIdChanging(System.Guid value);
    partial void OnBankAccountIdChanged();
    partial void OnTransactionNoChanging(string value);
    partial void OnTransactionNoChanged();
    partial void OnIsClosedChanging(bool value);
    partial void OnIsClosedChanged();
    #endregion
	
	public tblBankAccountTransaction()
	{
		this._tblBankAccount = default(EntityRef<tblBankAccount>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionTypeId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid TransactionTypeId
	{
		get
		{
			return this._TransactionTypeId;
		}
		set
		{
			if ((this._TransactionTypeId != value))
			{
				this.OnTransactionTypeIdChanging(value);
				this.SendPropertyChanging();
				this._TransactionTypeId = value;
				this.SendPropertyChanged("TransactionTypeId");
				this.OnTransactionTypeIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankAccountId", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid BankAccountId
	{
		get
		{
			return this._BankAccountId;
		}
		set
		{
			if ((this._BankAccountId != value))
			{
				if (this._tblBankAccount.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnBankAccountIdChanging(value);
				this.SendPropertyChanging();
				this._BankAccountId = value;
				this.SendPropertyChanged("BankAccountId");
				this.OnBankAccountIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionNo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string TransactionNo
	{
		get
		{
			return this._TransactionNo;
		}
		set
		{
			if ((this._TransactionNo != value))
			{
				this.OnTransactionNoChanging(value);
				this.SendPropertyChanging();
				this._TransactionNo = value;
				this.SendPropertyChanged("TransactionNo");
				this.OnTransactionNoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="bit NOT NULL")]
	public bool IsClosed
	{
		get
		{
			return this._Status;
		}
		set
		{
			if ((this._Status != value))
			{
				this.OnIsClosedChanging(value);
				this.SendPropertyChanging();
				this._Status = value;
				this.SendPropertyChanged("IsClosed");
				this.OnIsClosedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tblBankAccount_tblBankAccountTransaction", Storage="_tblBankAccount", ThisKey="BankAccountId", OtherKey="ID", IsForeignKey=true)]
	public tblBankAccount tblBankAccount
	{
		get
		{
			return this._tblBankAccount.Entity;
		}
		set
		{
			tblBankAccount previousValue = this._tblBankAccount.Entity;
			if (((previousValue != value) 
						|| (this._tblBankAccount.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._tblBankAccount.Entity = null;
					previousValue.tblBankAccountTransactions.Remove(this);
				}
				this._tblBankAccount.Entity = value;
				if ((value != null))
				{
					value.tblBankAccountTransactions.Add(this);
					this._BankAccountId = value.ID;
				}
				else
				{
					this._BankAccountId = default(System.Guid);
				}
				this.SendPropertyChanged("tblBankAccount");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDNSnapshot")]
public partial class tblDNSnapshot : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _ID;
	
	private System.Nullable<System.Guid> _MemberID;
	
	private System.Nullable<System.Guid> _ClientID;
	
	private System.Guid _CommodityGrade;
	
	private double _AvailableQuantity;
	
	private double _Weight;
	
	private System.DateTime _TradeDate;
	
	private System.DateTime _LastPickupDate;
	
	private int _WHRID;
	
	private System.DateTime _GeneratedDate;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(System.Guid value);
    partial void OnIDChanged();
    partial void OnMemberIDChanging(System.Nullable<System.Guid> value);
    partial void OnMemberIDChanged();
    partial void OnClientIDChanging(System.Nullable<System.Guid> value);
    partial void OnClientIDChanged();
    partial void OnCommodityGradeChanging(System.Guid value);
    partial void OnCommodityGradeChanged();
    partial void OnAvailableQuantityChanging(double value);
    partial void OnAvailableQuantityChanged();
    partial void OnWeightChanging(double value);
    partial void OnWeightChanged();
    partial void OnTradeDateChanging(System.DateTime value);
    partial void OnTradeDateChanged();
    partial void OnLastPickupDateChanging(System.DateTime value);
    partial void OnLastPickupDateChanged();
    partial void OnWHRIDChanging(int value);
    partial void OnWHRIDChanged();
    partial void OnGeneratedDateChanging(System.DateTime value);
    partial void OnGeneratedDateChanged();
    #endregion
	
	public tblDNSnapshot()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemberID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> MemberID
	{
		get
		{
			return this._MemberID;
		}
		set
		{
			if ((this._MemberID != value))
			{
				this.OnMemberIDChanging(value);
				this.SendPropertyChanging();
				this._MemberID = value;
				this.SendPropertyChanged("MemberID");
				this.OnMemberIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClientID", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> ClientID
	{
		get
		{
			return this._ClientID;
		}
		set
		{
			if ((this._ClientID != value))
			{
				this.OnClientIDChanging(value);
				this.SendPropertyChanging();
				this._ClientID = value;
				this.SendPropertyChanged("ClientID");
				this.OnClientIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CommodityGrade", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid CommodityGrade
	{
		get
		{
			return this._CommodityGrade;
		}
		set
		{
			if ((this._CommodityGrade != value))
			{
				this.OnCommodityGradeChanging(value);
				this.SendPropertyChanging();
				this._CommodityGrade = value;
				this.SendPropertyChanged("CommodityGrade");
				this.OnCommodityGradeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AvailableQuantity", DbType="Float NOT NULL")]
	public double AvailableQuantity
	{
		get
		{
			return this._AvailableQuantity;
		}
		set
		{
			if ((this._AvailableQuantity != value))
			{
				this.OnAvailableQuantityChanging(value);
				this.SendPropertyChanging();
				this._AvailableQuantity = value;
				this.SendPropertyChanged("AvailableQuantity");
				this.OnAvailableQuantityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weight", DbType="Float NOT NULL")]
	public double Weight
	{
		get
		{
			return this._Weight;
		}
		set
		{
			if ((this._Weight != value))
			{
				this.OnWeightChanging(value);
				this.SendPropertyChanging();
				this._Weight = value;
				this.SendPropertyChanged("Weight");
				this.OnWeightChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TradeDate", DbType="DateTime NOT NULL")]
	public System.DateTime TradeDate
	{
		get
		{
			return this._TradeDate;
		}
		set
		{
			if ((this._TradeDate != value))
			{
				this.OnTradeDateChanging(value);
				this.SendPropertyChanging();
				this._TradeDate = value;
				this.SendPropertyChanged("TradeDate");
				this.OnTradeDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastPickupDate", DbType="DateTime NOT NULL")]
	public System.DateTime LastPickupDate
	{
		get
		{
			return this._LastPickupDate;
		}
		set
		{
			if ((this._LastPickupDate != value))
			{
				this.OnLastPickupDateChanging(value);
				this.SendPropertyChanging();
				this._LastPickupDate = value;
				this.SendPropertyChanged("LastPickupDate");
				this.OnLastPickupDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WHRID", DbType="Int NOT NULL")]
	public int WHRID
	{
		get
		{
			return this._WHRID;
		}
		set
		{
			if ((this._WHRID != value))
			{
				this.OnWHRIDChanging(value);
				this.SendPropertyChanging();
				this._WHRID = value;
				this.SendPropertyChanged("WHRID");
				this.OnWHRIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GeneratedDate", DbType="DateTime NOT NULL")]
	public System.DateTime GeneratedDate
	{
		get
		{
			return this._GeneratedDate;
		}
		set
		{
			if ((this._GeneratedDate != value))
			{
				this.OnGeneratedDateChanging(value);
				this.SendPropertyChanging();
				this._GeneratedDate = value;
				this.SendPropertyChanged("GeneratedDate");
				this.OnGeneratedDateChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblExceptionLog")]
public partial class tblExceptionLog : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private System.Guid _Id;
	
	private System.DateTime _ExceptionDate;
	
	private string _ExceptionType;
	
	private string _ShortMessage;
	
	private string _FullMessage;
	
	private string _UserName;
	
	private System.Nullable<System.Guid> _UserGuid;
	
	private string _Remark;
	
	private int _IdNo = default(int);
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(System.Guid value);
    partial void OnIdChanged();
    partial void OnExceptionDateChanging(System.DateTime value);
    partial void OnExceptionDateChanged();
    partial void OnExceptionTypeChanging(string value);
    partial void OnExceptionTypeChanged();
    partial void OnShortMessageChanging(string value);
    partial void OnShortMessageChanged();
    partial void OnFullMessageChanging(string value);
    partial void OnFullMessageChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnUserGuidChanging(System.Nullable<System.Guid> value);
    partial void OnUserGuidChanged();
    partial void OnRemarkChanging(string value);
    partial void OnRemarkChanged();
    #endregion
	
	public tblExceptionLog()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
	public System.Guid Id
	{
		get
		{
			return this._Id;
		}
		set
		{
			if ((this._Id != value))
			{
				this.OnIdChanging(value);
				this.SendPropertyChanging();
				this._Id = value;
				this.SendPropertyChanged("Id");
				this.OnIdChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionDate", DbType="DateTime NOT NULL")]
	public System.DateTime ExceptionDate
	{
		get
		{
			return this._ExceptionDate;
		}
		set
		{
			if ((this._ExceptionDate != value))
			{
				this.OnExceptionDateChanging(value);
				this.SendPropertyChanging();
				this._ExceptionDate = value;
				this.SendPropertyChanged("ExceptionDate");
				this.OnExceptionDateChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExceptionType", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
	public string ExceptionType
	{
		get
		{
			return this._ExceptionType;
		}
		set
		{
			if ((this._ExceptionType != value))
			{
				this.OnExceptionTypeChanging(value);
				this.SendPropertyChanging();
				this._ExceptionType = value;
				this.SendPropertyChanged("ExceptionType");
				this.OnExceptionTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortMessage", DbType="NVarChar(1500) NOT NULL", CanBeNull=false)]
	public string ShortMessage
	{
		get
		{
			return this._ShortMessage;
		}
		set
		{
			if ((this._ShortMessage != value))
			{
				this.OnShortMessageChanging(value);
				this.SendPropertyChanging();
				this._ShortMessage = value;
				this.SendPropertyChanged("ShortMessage");
				this.OnShortMessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullMessage", DbType="NText NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
	public string FullMessage
	{
		get
		{
			return this._FullMessage;
		}
		set
		{
			if ((this._FullMessage != value))
			{
				this.OnFullMessageChanging(value);
				this.SendPropertyChanging();
				this._FullMessage = value;
				this.SendPropertyChanged("FullMessage");
				this.OnFullMessageChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="NVarChar(350)")]
	public string UserName
	{
		get
		{
			return this._UserName;
		}
		set
		{
			if ((this._UserName != value))
			{
				this.OnUserNameChanging(value);
				this.SendPropertyChanging();
				this._UserName = value;
				this.SendPropertyChanged("UserName");
				this.OnUserNameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserGuid", DbType="UniqueIdentifier")]
	public System.Nullable<System.Guid> UserGuid
	{
		get
		{
			return this._UserGuid;
		}
		set
		{
			if ((this._UserGuid != value))
			{
				this.OnUserGuidChanging(value);
				this.SendPropertyChanging();
				this._UserGuid = value;
				this.SendPropertyChanged("UserGuid");
				this.OnUserGuidChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Remark", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string Remark
	{
		get
		{
			return this._Remark;
		}
		set
		{
			if ((this._Remark != value))
			{
				this.OnRemarkChanging(value);
				this.SendPropertyChanging();
				this._Remark = value;
				this.SendPropertyChanged("Remark");
				this.OnRemarkChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNo", UpdateCheck=UpdateCheck.Never)]
	public int IdNo
	{
		get
		{
			return this._IdNo;
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

public partial class spCreateMCPBankAccountResult
{
	
	private int _Column1;
	
	public spCreateMCPBankAccountResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Column1", DbType="Int NOT NULL")]
	public int Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class spAccountTypesNotCreatedForMemberResult
{
	
	private System.Guid _ID;
	
	private string _Name;
	
	private string _Description;
	
	public spAccountTypesNotCreatedForMemberResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="UniqueIdentifier NOT NULL")]
	public System.Guid ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this._ID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this._Name = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(500) NOT NULL", CanBeNull=false)]
	public string Description
	{
		get
		{
			return this._Description;
		}
		set
		{
			if ((this._Description != value))
			{
				this._Description = value;
			}
		}
	}
}

public partial class spInsertExceptionResult
{
	
	private System.Nullable<decimal> _Column1;
	
	public spInsertExceptionResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Column1", DbType="Decimal(0,0)")]
	public System.Nullable<decimal> Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class spCreateMCPWarehouseReceiptResult
{
	
	private int _Column1;
	
	public spCreateMCPWarehouseReceiptResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Column1", DbType="Int NOT NULL")]
	public int Column1
	{
		get
		{
			return this._Column1;
		}
		set
		{
			if ((this._Column1 != value))
			{
				this._Column1 = value;
			}
		}
	}
}

public partial class spIsAccountValidResult
{
	
	private string _Error;
	
	public spIsAccountValidResult()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Error", DbType="VarChar(200)")]
	public string Error
	{
		get
		{
			return this._Error;
		}
		set
		{
			if ((this._Error != value))
			{
				this._Error = value;
			}
		}
	}
}
#pragma warning restore 1591
