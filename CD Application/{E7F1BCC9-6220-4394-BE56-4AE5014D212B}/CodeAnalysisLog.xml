<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 10.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="10.0">
 <Targets>
  <Target Name="C:\Users\senait.balkew\AppData\Local\Temp\tmp278C.tmp.cadir\bin\App_Code.dll">
   <Modules>
    <Module Name="app_code.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="BagTypeModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetData()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code\WHRApprove" File="WarehouseReceiptModel.cs" Line="386">In method 'BagTypeModel.GetData()', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="BankAccount" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetMemberClass(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="BankAccount.cs" Line="132">In method 'BankAccount.GetMemberClass(object)', call System.IDisposable.Dispose on object 'membership' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMembersToCreateAccount()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="BankAccount.cs" Line="126">In method 'BankAccount.GetMembersToCreateAccount()', call System.IDisposable.Dispose on object 'membership' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InsertBankAccount(System.Guid,System.Guid,System.Guid,System.String,System.Byte,System.DateTime,System.Nullable`1&lt;System.Guid&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="BankAccount.cs" Line="418">In method 'BankAccount.InsertBankAccount(Guid, Guid, Guid, string, byte, DateTime, Guid?)', call System.IDisposable.Dispose on object 'db' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsAccountCreationComplete(System.Guid,System.Int32,System.Collections.Generic.List`1&lt;System.String&gt;&amp;,System.Collections.Generic.List`1&lt;System.Guid&gt;&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="BankAccount.cs" Line="139">In method 'BankAccount.IsAccountCreationComplete(Guid, int, out List&lt;string&gt;, out List&lt;Guid&gt;)', object 'comm' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'comm' before all references to it are out of scope.</Issue>
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="BankAccount.cs" Line="138">In method 'BankAccount.IsAccountCreationComplete(Guid, int, out List&lt;string&gt;, out List&lt;Guid&gt;)', object 'conn' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'conn' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#IsAccountValid(System.Guid,System.Guid,System.Nullable`1&lt;System.Guid&gt;,System.Guid,System.Guid,System.String,System.String&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="BankAccount.cs" Line="183">In method 'BankAccount.IsAccountValid(Guid, Guid, Guid?, Guid, Guid, string, out string)', call System.IDisposable.Dispose on object 'db' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RequestBankAccountClosure(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="BankAccount.cs" Line="540">In method 'BankAccount.RequestBankAccountClosure(Guid)', object 'db' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'db' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RequestBankAccountResume(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="BankAccount.cs" Line="601">In method 'BankAccount.RequestBankAccountResume(Guid)', object 'db' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'db' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#RequestBankAccountSuspension(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="BankAccount.cs" Line="478">In method 'BankAccount.RequestBankAccountSuspension(Guid)', object 'db' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'db' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendBankAccountCreationNotice(System.Guid,System.Guid,System.Guid,System.Guid,System.String,System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="BankAccount.cs" Line="814">In method 'BankAccount.SendBankAccountCreationNotice(Guid, Guid, Guid, Guid, string, Guid)', object 'cns' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'cns' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SendBankAccountStatus(System.Guid,System.Int16,System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="BankAccount.cs" Line="829">In method 'BankAccount.SendBankAccountStatus(Guid, short, Guid)', object 'cns' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'cns' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SetMembersWithNonEmptyPayinAccount()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="BankAccount.cs" Line="203">In method 'BankAccount.SetMembersWithNonEmptyPayinAccount()', call System.IDisposable.Dispose on object 'db' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UpdateBalance()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="BankAccount.cs" Line="785">In method 'BankAccount.UpdateBalance()', call System.IDisposable.Dispose on object 'command' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Common" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FillBankAccountType(System.Web.UI.WebControls.DropDownList,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Common.cs" Line="218">In method 'Common.FillBankAccountType(DropDownList, bool)', call System.IDisposable.Dispose on object 'db' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillClientBankAccountType(System.Web.UI.WebControls.DropDownList,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Common.cs" Line="205">In method 'Common.FillClientBankAccountType(DropDownList, bool)', call System.IDisposable.Dispose on object 'db' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBankAccountType(System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Common.cs" Line="242">In method 'Common.GetBankAccountType(bool)', call System.IDisposable.Dispose on object 'db' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBankBranches(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Common.cs" Line="193">In method 'Common.GetBankBranches(Guid)', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBankName(System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Common.cs" Line="150">In method 'Common.GetBankName(object)', call System.IDisposable.Dispose on object 'lookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCommodityGradeName(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Common.cs" Line="287">In method 'Common.GetCommodityGradeName(Guid)', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMemberGuid(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Common.cs" Line="139">In method 'Common.GetMemberGuid(string)', call System.IDisposable.Dispose on object 'new AuthorizedMembershipLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetParentBankID(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Common.cs" Line="182">In method 'Common.GetParentBankID(Guid)', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWarehouseName(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Common.cs" Line="276">In method 'Common.GetWarehouseName(Guid)', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateCommodityGrades(System.Web.UI.WebControls.DropDownList)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Common.cs" Line="298">In method 'Common.PopulateCommodityGrades(DropDownList)', call System.IDisposable.Dispose on object 'eCXLookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateWarehouses(System.Web.UI.WebControls.DropDownList)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Common.cs" Line="324">In method 'Common.PopulateWarehouses(DropDownList)', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CommonUtilities" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetBankBranches(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="CommonUtilities.cs" Line="106">In method 'CommonUtilities.GetBankBranches(string, string)', object 'lookup' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBanks(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="CommonUtilities.cs" Line="76">In method 'CommonUtilities.GetBanks(string, string)', object 'lookup' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCommodities(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="CommonUtilities.cs" Line="33">In method 'CommonUtilities.GetCommodities(string, string)', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCommodityClasses(System.String,System.String)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="CommonUtilities.cs" Line="60">In method 'CommonUtilities.GetCommodityClasses(string, string)', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="DeliveryNotice" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Dispose(System.Boolean)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message Id="db" TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="NonBreaking">
             <Issue Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="DeliveryNotice.cs" Line="150">'DeliveryNotice' contains field 'DeliveryNotice.db' that is of IDisposable type: 'MainDataContextDataContext'. Change the Dispose method on 'DeliveryNotice' to call Dispose or Close on this field.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MemberClientAgreement" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FillList()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MemberClientAgreement.cs" Line="29">In method 'MemberClientAgreement.FillList()', call System.IDisposable.Dispose on object 'new AuthorizedMembershipLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMemberGuid(System.Guid,System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MemberClientAgreement.cs" Line="33">In method 'MemberClientAgreement.GetMemberGuid(Guid, Guid)', call System.IDisposable.Dispose on object 'new MemberShipLookUp()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="MemberClientModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetData()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code\WHRApprove" File="WarehouseReceiptModel.cs" Line="362">In method 'MemberClientModel.GetData()', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Members" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#clients" Kind="Property" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_clients()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
               <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Members.cs" Line="70">In method 'Members.clients.get()', call System.IDisposable.Dispose on object 'new AuthorizedMembershipLookup()' before all references to it are out of scope.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
          <Member Name="#FillClients()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Members.cs" Line="117">In method 'Members.FillClients()', call System.IDisposable.Dispose on object 'm' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillMembers()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Members.cs" Line="108">In method 'Members.FillMembers()', call System.IDisposable.Dispose on object 'm' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetClients(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Members.cs" Line="336">In method 'Members.GetClients(string)', call System.IDisposable.Dispose on object 'mlookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMembers(System.Guid[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Members.cs" Line="323">In method 'Members.GetMembers(Guid[])', call System.IDisposable.Dispose on object 'new AuthorizedMembershipLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetMembersGuidByTransNo(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Members.cs" Line="249">In method 'Members.GetMembersGuidByTransNo(string)', call System.IDisposable.Dispose on object 'new AuthorizedMembershipLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#members" Kind="Property" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Accessors>
            <Accessor Name="#get_members()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
             <Messages>
              <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
               <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Members.cs" Line="44">In method 'Members.members.get()', call System.IDisposable.Dispose on object 'new AuthorizedMembershipLookup()' before all references to it are out of scope.</Issue>
              </Message>
             </Messages>
            </Accessor>
           </Accessors>
          </Member>
         </Members>
        </Type>
        <Type Name="rptApprovedAndNewWHRs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#rptApprovedAndNewWHRs_ReportStart(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="rptApprovedAndNewWHRs.cs" Line="498">In method 'rptApprovedAndNewWHRs.rptApprovedAndNewWHRs_ReportStart(object, EventArgs)', object 'items' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'items' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="rptDN" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#detail_Format(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="rptDN.cs" Line="1892">In method 'rptDN.detail_Format(object, EventArgs)', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="rptPUN" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#detail_Format(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="rptPUN.cs" Line="988">In method 'rptPUN.detail_Format(object, EventArgs)', call System.IDisposable.Dispose on object 'mem' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Snapshot" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InsertDNSnapshot(System.String,System.Nullable`1&lt;System.Guid&gt;,System.String,System.String,System.Nullable`1&lt;System.Guid&gt;,System.String,System.Guid,System.String,System.Double,System.Double,System.Nullable`1&lt;System.DateTime&gt;,System.Nullable`1&lt;System.DateTime&gt;,System.Int32,System.String,System.Guid,System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Snapshot.cs" Line="128">In method 'Snapshot.InsertDNSnapshot(string, Guid?, string, string, Guid?, string, Guid, string, double, double, DateTime?, DateTime?, int, string, Guid, string)', call System.IDisposable.Dispose on object 'command' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveDNSnapshot(System.Collections.Generic.List`1&lt;System.Int32&gt;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Snapshot.cs" Line="43">In method 'Snapshot.SaveDNSnapshot(List&lt;int&gt;)', call System.IDisposable.Dispose on object 'new MemberShipLookUp()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TradeDNExists(System.DateTime)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Snapshot.cs" Line="190">In method 'Snapshot.TradeDNExists(DateTime)', call System.IDisposable.Dispose on object 'command' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#WithdrawalDNExists(System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Snapshot.cs" Line="171">In method 'Snapshot.WithdrawalDNExists(int)', call System.IDisposable.Dispose on object 'command' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WarehouseReceiptModel" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetReportList(System.DateTime,System.DateTime,System.Boolean)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code\WHRApprove" File="WarehouseReceiptModel.cs" Line="124">In method 'WarehouseReceiptModel.GetReportList(DateTime, DateTime, bool)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateList(System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code\WHRApprove" File="WarehouseReceiptModel.cs" Line="192">In method 'WarehouseReceiptModel.PopulateList(string)', call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="Datalayer">
       <Types>
        <Type Name="MCPCollection" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="Breaking">
           <Issue Name="ProvideDisposeBool" Certainty="95" Level="Error">Provide an overridable implementation of Dispose(bool) on 'MCPCollection' or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Issue>
          </Message>
         </Messages>
         <Members>
          <Member Name="#Dispose()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="Breaking">
             <Issue Name="DisposeImplementation" Certainty="95" Level="Error" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="826">Modify 'MCPCollection.Dispose()' so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillMCP()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="275">In method 'MCPCollection.FillMCP()', call System.IDisposable.Dispose on object 'new AuthorizedMembershipLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveMCP(System.Guid,Datalayer.MCPCollection)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="746">In method 'MCPCollection.SaveMCP(Guid, MCPCollection)', call System.IDisposable.Dispose on object 'db' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SQLHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#execNonQuerySQL(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="1035">Object 'cn' can be disposed more than once in method 'SQLHelper.execNonQuerySQL(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1035</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="1028">The query string passed to 'SqlCommand.CommandText.set(string)' in 'SQLHelper.execNonQuerySQL(string, string)' could contain the following variables 'sql'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.String,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="1139">The query string passed to 'SqlCommand.CommandText.set(string)' in 'SQLHelper.ExecuteScalar(string, string, params object[])' could contain the following variables 'spName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSP(System.String,System.String,System.Data.DataRow)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="1002">The query string passed to 'SqlCommand.SqlCommand(string)' in 'SQLHelper.ExecuteSP(string, string, DataRow)' could contain the following variables 'spName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSP(System.String,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="984">The query string passed to 'SqlCommand.SqlCommand(string)' in 'SQLHelper.ExecuteSP(string, string, params object[])' could contain the following variables 'spName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getDataTable(System.String,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="1189">In method 'SQLHelper.getDataTable(string, string, params object[])', object 'dtReturn' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dtReturn' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getSPParameters(System.String,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="1108">The query string passed to 'SqlCommand.SqlCommand(string)' in 'SQLHelper.getSPParameters(string, string, bool)' could contain the following variables 'spName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getTableSQL(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="1197">In method 'SQLHelper.getTableSQL(string, string)', object 'dt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="1207">In method 'SQLHelper.getTableSQL(string, string)', call System.IDisposable.Dispose on object 'da' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="1212">Object 'cn' can be disposed more than once in method 'SQLHelper.getTableSQL(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 1212</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="1203">The query string passed to 'SqlCommand.CommandText.set(string)' in 'SQLHelper.getTableSQL(string, string)' could contain the following variables 'sql'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateTable(System.String,System.Data.DataTable,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="1171">In method 'SQLHelper.PopulateTable(string, DataTable, string, params object[])', call System.IDisposable.Dispose on object 'da' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="1167">The query string passed to 'SqlCommand.CommandText.set(string)' in 'SQLHelper.PopulateTable(string, DataTable, string, params object[])' could contain the following variables 'spName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WHR" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FillWHR()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="96">In method 'WHR.FillWHR()', call System.IDisposable.Dispose on object 'comm' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="91">In method 'WHR.FillWHR()', call System.IDisposable.Dispose on object 'conn' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="MCP.cs" Line="96">The query string passed to 'SqlCommand.SqlCommand(string, SqlConnection)' in 'WHR.FillWHR()' could contain the following variables 'whrApprovedStatusCode', 'whrPendingStatusCode'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ECX.CD.Lookup">
       <Types>
        <Type Name="AuthorizedMembershipLookup" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetMembersByTransactionNo()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Lookup.cs" Line="50">In method 'AuthorizedMembershipLookup.GetMembersByTransactionNo()', call System.IDisposable.Dispose on object 'membership' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="CommodityLookup" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#.cctor()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="CommodityLookup.cs" Line="34">In method 'CommodityLookup.CommodityLookup()', call System.IDisposable.Dispose on object 'objEcxLookUp' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="CommodityLookup.cs" Line="68">In method 'CommodityLookup.CommodityLookup()', call System.IDisposable.Dispose on object 'objEcxLookUp' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllCommodityDetail()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="CommodityLookup.cs" Line="225">In method 'CommodityLookup.GetAllCommodityDetail()', call System.IDisposable.Dispose on object 'objEcxLookUp' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetAllCommodityGuids()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="CommodityLookup.cs" Line="126">In method 'CommodityLookup.GetAllCommodityGuids()', call System.IDisposable.Dispose on object 'lookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCommodityClassById(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="CommodityLookup.cs" Line="168">'CommodityLookup.GetCommodityClassById(Guid)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetCommodityGradeNameById(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="CommodityLookup.cs" Line="177">In method 'CommodityLookup.GetCommodityGradeNameById(Guid)', call System.IDisposable.Dispose on object 'objEcxLookUp' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="CommodityLookup.cs" Line="191">'CommodityLookup.GetCommodityGradeNameById(Guid)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="LookupList" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FillBagList()" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Lookup.cs" Line="220">In method 'LookupList.FillBagList()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillCommodity()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Lookup.cs" Line="128">In method 'LookupList.FillCommodity()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Lookup.cs" Line="133">In method 'LookupList.FillCommodity()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Lookup.cs" Line="137">In method 'LookupList.FillCommodity()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#FillWarehouse()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Lookup.cs" Line="152">In method 'LookupList.FillWarehouse()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBankBranchName(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Lookup.cs" Line="197">In method 'LookupList.GetBankBranchName(Guid)', call System.IDisposable.Dispose on object 'lookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBankName(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Lookup.cs" Line="168">In method 'LookupList.GetBankName(Guid)', call System.IDisposable.Dispose on object 'lookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ECX.CD.Reports">
       <Types>
        <Type Name="WHRDetail" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetDrivers(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WHRDetail.cs" Line="146">In method 'WHRDetail.GetDrivers(Guid)', call System.IDisposable.Dispose on object 'whrDetail' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetDriversNames(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WHRDetail.cs" Line="98">In method 'WHRDetail.GetDriversNames(Guid)', call System.IDisposable.Dispose on object 'whrDetail' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetGradersSupervisorName(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WHRDetail.cs" Line="53">In method 'WHRDetail.GetGradersSupervisorName(Guid)', call System.IDisposable.Dispose on object 'whrDetail' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSamplersSupervisorName(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WHRDetail.cs" Line="117">In method 'WHRDetail.GetSamplersSupervisorName(Guid)', call System.IDisposable.Dispose on object 'whrDetail' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetSamplingDetail(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WHRDetail.cs" Line="29">In method 'WHRDetail.GetSamplingDetail(Guid)', call System.IDisposable.Dispose on object 'whrDetail' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetScaleTicketNo(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WHRDetail.cs" Line="40">In method 'WHRDetail.GetScaleTicketNo(Guid)', call System.IDisposable.Dispose on object 'whrDetail' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetScalingDetail(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WHRDetail.cs" Line="24">In method 'WHRDetail.GetScalingDetail(Guid)', call System.IDisposable.Dispose on object 'whrDetail' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUnloadingDetail(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WHRDetail.cs" Line="34">In method 'WHRDetail.GetUnloadingDetail(Guid)', call System.IDisposable.Dispose on object 'whrDetail' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetWeighersSupervisorName(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WHRDetail.cs" Line="74">In method 'WHRDetail.GetWeighersSupervisorName(Guid)', call System.IDisposable.Dispose on object 'whrDetail' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ECX.CD.Security">
       <Types>
        <Type Name="AuditTrail" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Messages>
          <Message TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
           <Issue Name="DependsOnFix" Certainty="95" Level="CriticalError">Implement IDisposable on 'AuditTrail' because it creates members of the following IDisposable types: 'ECXSecurityAccess'. If 'AuditTrail' has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Issue>
          </Message>
         </Messages>
        </Type>
        <Type Name="ErrorHandler" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#WriteLogEntry(System.String,System.String,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="ErrorHandler.cs" Line="53">In method 'ErrorHandler.WriteLogEntry(string, string, string, string)', object 'db' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'db' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SecurityHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetUserGuid()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="221">In method 'SecurityHelper.GetUserGuid()', call System.IDisposable.Dispose on object 'de' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="225">In method 'SecurityHelper.GetUserGuid()', call System.IDisposable.Dispose on object 'deSearch' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="NonBreaking">
             <Issue Certainty="33" Level="CriticalError" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="216">'SecurityHelper.GetUserGuid()' calls into 'DirectoryEntry.Guid.get()' which has a LinkDemand. By making this call, 'DirectoryEntry.Guid.get()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'&#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="216">'SecurityHelper.GetUserGuid()' calls into 'DirectoryEntry.Password.set(string)' which has a LinkDemand. By making this call, 'DirectoryEntry.Password.set(string)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'&#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="216">'SecurityHelper.GetUserGuid()' calls into 'DirectoryEntry.Properties.get()' which has a LinkDemand. By making this call, 'DirectoryEntry.Properties.get()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'&#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="216">'SecurityHelper.GetUserGuid()' calls into 'DirectoryEntry.Username.set(string)' which has a LinkDemand. By making this call, 'DirectoryEntry.Username.set(string)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'&#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="216">'SecurityHelper.GetUserGuid()' calls into 'DirectorySearcher.Filter.set(string)' which has a LinkDemand. By making this call, 'DirectorySearcher.Filter.set(string)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'&#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="216">'SecurityHelper.GetUserGuid()' calls into 'DirectorySearcher.FindAll()' which has a LinkDemand. By making this call, 'DirectorySearcher.FindAll()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'&#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="216">'SecurityHelper.GetUserGuid()' calls into 'DirectorySearcher.SearchRoot.set(DirectoryEntry)' which has a LinkDemand. By making this call, 'DirectorySearcher.SearchRoot.set(DirectoryEntry)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'&#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="216">'SecurityHelper.GetUserGuid()' calls into 'DirectorySearcher.SearchScope.set(SearchScope)' which has a LinkDemand. By making this call, 'DirectorySearcher.SearchScope.set(SearchScope)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'&#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="216">'SecurityHelper.GetUserGuid()' calls into 'PropertyCollection.this.get(string)' which has a LinkDemand. By making this call, 'PropertyCollection.this.get(string)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'&#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="216">'SecurityHelper.GetUserGuid()' calls into 'PropertyValueCollection.Value.get()' which has a LinkDemand. By making this call, 'PropertyValueCollection.Value.get()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'&#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="216">'SecurityHelper.GetUserGuid()' calls into 'SearchResult.GetDirectoryEntry()' which has a LinkDemand. By making this call, 'SearchResult.GetDirectoryEntry()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'&#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="216">'SecurityHelper.GetUserGuid()' calls into 'SearchResultCollection.Count.get()' which has a LinkDemand. By making this call, 'SearchResultCollection.Count.get()' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'&#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'</Issue>
             <Issue Certainty="33" Level="CriticalError" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="216">'SecurityHelper.GetUserGuid()' calls into 'SearchResultCollection.this.get(int)' which has a LinkDemand. By making this call, 'SearchResultCollection.this.get(int)' is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: &#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'&#xD;&#xA;   -&gt;'SecurityHelper.GetUserGuid()'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserGuid(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="171">In method 'SecurityHelper.GetUserGuid(string, string)', call System.IDisposable.Dispose on object 'sec' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserName(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="342">In method 'SecurityHelper.GetUserName(Guid)', call System.IDisposable.Dispose on object 'new ECXSecurityAccess()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetUserRights(System.Guid)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Security.cs" Line="276">In method 'SecurityHelper.GetUserRights(Guid)', call System.IDisposable.Dispose on object 'sec' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ECX.CD.WorkFlow">
       <Types>
        <Type Name="Inbox" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetList(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="Inbox.cs" Line="30">In method 'Inbox.GetList(string)', call System.IDisposable.Dispose on object 'engine' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="WorkFlow" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#AbortTransaction(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WorkFlow.cs" Line="69">In method 'WorkFlow.AbortTransaction(string)', call System.IDisposable.Dispose on object 'new ECXEngine()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ImportNewMembersForAccountCreation()" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WorkFlow.cs" Line="288">In method 'WorkFlow.ImportNewMembersForAccountCreation()', call System.IDisposable.Dispose on object 'db' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WorkFlow.cs" Line="278">In method 'WorkFlow.ImportNewMembersForAccountCreation()', call System.IDisposable.Dispose on object 'engine' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WorkFlow.cs" Line="320">Object 'scope' can be disposed more than once in method 'WorkFlow.ImportNewMembersForAccountCreation()'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 320</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ImportNewPrepareTransferTitleTransaction(System.Guid,System.Guid,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WorkFlow.cs" Line="342">In method 'WorkFlow.ImportNewPrepareTransferTitleTransaction(Guid, Guid, string, string)', call System.IDisposable.Dispose on object 'db' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InsertMemberTransaction(System.Guid,System.Guid,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WorkFlow.cs" Line="264">In method 'WorkFlow.InsertMemberTransaction(Guid, Guid, string, string)', call System.IDisposable.Dispose on object 'db' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#OpenTransaction(ECX.CD.WorkFlow.TransactionTypes,System.String&amp;)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WorkFlow.cs" Line="254">In method 'WorkFlow.OpenTransaction(TransactionTypes, out string)', call System.IDisposable.Dispose on object 'engine' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#StepCompleted(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WorkFlow.cs" Line="41">In method 'WorkFlow.StepCompleted(string)', call System.IDisposable.Dispose on object 'engine' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#UnlockTask(System.String)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="WorkFlow.cs" Line="329">In method 'WorkFlow.UnlockTask(string)', call System.IDisposable.Dispose on object 'engine' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ECX.DataAccess">
       <Types>
        <Type Name="SQLHelper" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#execNonQuerySQL(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="SQLHelper.cs" Line="135">Object 'cn' can be disposed more than once in method 'SQLHelper.execNonQuerySQL(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 135</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="SQLHelper.cs" Line="128">The query string passed to 'SqlCommand.CommandText.set(string)' in 'SQLHelper.execNonQuerySQL(string, string)' could contain the following variables 'sql'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteScalar(System.String,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="SQLHelper.cs" Line="261">The query string passed to 'SqlCommand.CommandText.set(string)' in 'SQLHelper.ExecuteScalar(string, string, params object[])' could contain the following variables 'spName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSP(System.String,System.String,System.Data.DataRow)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="SQLHelper.cs" Line="108">The query string passed to 'SqlCommand.SqlCommand(string)' in 'SQLHelper.ExecuteSP(string, string, DataRow)' could contain the following variables 'spName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ExecuteSP(System.String,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="SQLHelper.cs" Line="66">The query string passed to 'SqlCommand.SqlCommand(string)' in 'SQLHelper.ExecuteSP(string, string, params object[])' could contain the following variables 'spName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getDataTable(System.String,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="SQLHelper.cs" Line="311">In method 'SQLHelper.getDataTable(string, string, params object[])', object 'dtReturn' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dtReturn' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getSPParameters(System.String,System.String,System.Boolean)" Kind="Method" Static="True" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="SQLHelper.cs" Line="232">The query string passed to 'SqlCommand.SqlCommand(string)' in 'SQLHelper.getSPParameters(string, string, bool)' could contain the following variables 'spName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#getTableSQL(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="SQLHelper.cs" Line="317">In method 'SQLHelper.getTableSQL(string, string)', object 'dt' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'dt' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="SQLHelper.cs" Line="327">In method 'SQLHelper.getTableSQL(string, string)', call System.IDisposable.Dispose on object 'da' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="SQLHelper.cs" Line="332">Object 'cn' can be disposed more than once in method 'SQLHelper.getTableSQL(string, string)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 332</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="SQLHelper.cs" Line="323">The query string passed to 'SqlCommand.CommandText.set(string)' in 'SQLHelper.getTableSQL(string, string)' could contain the following variables 'sql'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateTable(System.String,System.Data.DataTable,System.String,System.Object[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="SQLHelper.cs" Line="295">In method 'SQLHelper.PopulateTable(string, DataTable, string, params object[])', call System.IDisposable.Dispose on object 'da' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="SQLHelper.cs" Line="291">The query string passed to 'SqlCommand.CommandText.set(string)' in 'SQLHelper.PopulateTable(string, DataTable, string, params object[])' could contain the following variables 'spName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Save(System.String,System.String,System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="SQLHelper.cs" Line="80">The query string passed to 'SqlCommand.SqlCommand(string)' in 'SQLHelper.Save(string, string, object)' could contain the following variables 'spName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SaveAndReturn(System.String,System.String,System.Object)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="WithNonLiterals" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\App_Code" File="SQLHelper.cs" Line="94">The query string passed to 'SqlCommand.SqlCommand(string)' in 'SQLHelper.SaveAndReturn(string, string, object)' could contain the following variables 'spName'. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\senait.balkew\AppData\Local\Temp\tmp278C.tmp.cadir\bin\App_Web_2n2kfenw.dll">
   <Modules>
    <Module Name="app_web_2n2kfenw.dll">
     <Namespaces>
      <Namespace Name="ECX.CD.UI">
       <Types>
        <Type Name="Pages_ViewPUN" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PopulateItems(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ApprovePUN.aspx.cs" Line="56">In method 'Pages_ViewPUN.PopulateItems(int)', call System.IDisposable.Dispose on object 'msl' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ApprovePUN.aspx.cs" Line="63">In method 'Pages_ViewPUN.PopulateItems(int)', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\senait.balkew\AppData\Local\Temp\tmp278C.tmp.cadir\bin\App_Web_42e0tfyy.dll">
   <Modules>
    <Module Name="app_web_42e0tfyy.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="IF_AuthoriseUP" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="AuthoriseUP.aspx.cs" Line="83">In method 'IF_AuthoriseUP.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IF_ConfirmPRML" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="ConfirmPRML.aspx.cs" Line="82">In method 'IF_ConfirmPRML.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IF_ConfirmUP" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="ConfirmUP.aspx.cs" Line="89">In method 'IF_ConfirmUP.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\senait.balkew\AppData\Local\Temp\tmp278C.tmp.cadir\bin\App_Web_55g5awko.dll">
   <Modules>
    <Module Name="app_web_55g5awko.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Pages_ExpiryDateExtensionRequestPUN" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#bindRepresenentative()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ExpiryDateExtensionRequestPUN.aspx.cs" Line="112">In method 'Pages_ExpiryDateExtensionRequestPUN.bindRepresenentative()', call System.IDisposable.Dispose on object 'member' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pages_ViewGIN" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ViewGIN.aspx.cs" Line="61">In method 'Pages_ViewGIN.InitializeControls()', call System.IDisposable.Dispose on object 'new GINDetail()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#lkbSearch_Command(System.Object,System.Web.UI.WebControls.CommandEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ViewGIN.aspx.cs" Line="105">In method 'Pages_ViewGIN.lkbSearch_Command(object, CommandEventArgs)', call System.IDisposable.Dispose on object 'ecxLookup' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ViewGIN.aspx.cs" Line="104">In method 'Pages_ViewGIN.lkbSearch_Command(object, CommandEventArgs)', call System.IDisposable.Dispose on object 'ginDetail' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pages_ViewGinDetail" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#DisplayGIN(System.Guid)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ViewGinDetail.aspx.cs" Line="24">In method 'Pages_ViewGinDetail.DisplayGIN(Guid)', call System.IDisposable.Dispose on object 'gin' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pages_WHRHistory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="WHRHistory.aspx.cs" Line="23">In method 'Pages_WHRHistory.InitializeControls()', call System.IDisposable.Dispose on object 'sec' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ECX.CD.UI">
       <Types>
        <Type Name="ActivateNewBankAccount" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnFinish_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ActivateNewBankAccount.aspx.cs" Line="283">In method 'ActivateNewBankAccount.btnFinish_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'new AuthorizedMembershipLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBankBranches(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ActivateNewBankAccount.aspx.cs" Line="478">In method 'ActivateNewBankAccount.GetBankBranches(string, string)', object 'lookup' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBanks(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ActivateNewBankAccount.aspx.cs" Line="446">In method 'ActivateNewBankAccount.GetBanks(string, string)', object 'lookup' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pages_ApprovePUNEdit" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PopulateItems()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ApprovePUNEdit.aspx.cs" Line="58">In method 'Pages_ApprovePUNEdit.PopulateItems()', call System.IDisposable.Dispose on object 'ecxLookup' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ApprovePUNEdit.aspx.cs" Line="56">In method 'Pages_ApprovePUNEdit.PopulateItems()', call System.IDisposable.Dispose on object 'msl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pages_ExtendExpiryDate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ExtendExpiryDate.aspx.cs" Line="52">In method 'Pages_ExtendExpiryDate.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateItems()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ExtendExpiryDate.aspx.cs" Line="64">In method 'Pages_ExtendExpiryDate.PopulateItems()', call System.IDisposable.Dispose on object 'eCXLookup' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ExtendExpiryDate.aspx.cs" Line="65">In method 'Pages_ExtendExpiryDate.PopulateItems()', call System.IDisposable.Dispose on object 'membershipLookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pages_PrepareTitleTransfer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CommitTitleTransfer()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="PrepareTitleTransfer.aspx.cs" Line="139">'Pages_PrepareTitleTransfer.CommitTitleTransfer()' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateItems()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="PrepareTitleTransfer.aspx.cs" Line="70">In method 'Pages_PrepareTitleTransfer.PopulateItems()', call System.IDisposable.Dispose on object 'msLookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\senait.balkew\AppData\Local\Temp\tmp278C.tmp.cadir\bin\App_Web_5w5wo155.dll">
   <Modules>
    <Module Name="app_web_5w5wo155.dll">
     <Namespaces>
      <Namespace Name="ECX.CD.UI">
       <Types>
        <Type Name="Controls_WRDetail" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PopulateControls(System.Guid)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="WRDetail.ascx.cs" Line="63">In method 'Controls_WRDetail.PopulateControls(Guid)', call System.IDisposable.Dispose on object 'lookup' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="WRDetail.ascx.cs" Line="60">In method 'Controls_WRDetail.PopulateControls(Guid)', call System.IDisposable.Dispose on object 'msLookup' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="WRDetail.ascx.cs" Line="96">In method 'Controls_WRDetail.PopulateControls(Guid)', call System.IDisposable.Dispose on object 'new ECXSecurityAccess()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="WRDetail.ascx.cs" Line="64">In method 'Controls_WRDetail.PopulateControls(Guid)', call System.IDisposable.Dispose on object 'warehouse' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\senait.balkew\AppData\Local\Temp\tmp278C.tmp.cadir\bin\App_Web_gdhq4gic.dll">
   <Modules>
    <Module Name="app_web_gdhq4gic.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Controls_CommodityPicker" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ddlCommodity_SelectedIndexChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="CommodityPicker.ascx.cs" Line="70">In method 'Controls_CommodityPicker.ddlCommodity_SelectedIndexChanged(object, EventArgs)', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#ddlCommodityClass_SelectedIndexChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="CommodityPicker.ascx.cs" Line="80">In method 'Controls_CommodityPicker.ddlCommodityClass_SelectedIndexChanged(object, EventArgs)', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="CommodityPicker.ascx.cs" Line="51">In method 'Controls_CommodityPicker.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="CommodityPicker.ascx.cs" Line="56">In method 'Controls_CommodityPicker.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Controls_GINLoadingDetail" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PopulateControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="GINLoadingDetail.ascx.cs" Line="42">In method 'Controls_GINLoadingDetail.PopulateControls()', call System.IDisposable.Dispose on object 'new GINDetail()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Controls_GINScalingDetail" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PopulateControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="GINScalingDetail.ascx.cs" Line="42">In method 'Controls_GINScalingDetail.PopulateControls()', call System.IDisposable.Dispose on object 'new GINDetail()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Controls_ManageBankAccounts" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetBankBranches(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="ManageBankAccounts.ascx.cs" Line="431">In method 'Controls_ManageBankAccounts.GetBankBranches(string, string)', object 'lookup' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBanks(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="ManageBankAccounts.ascx.cs" Line="399">In method 'Controls_ManageBankAccounts.GetBanks(string, string)', object 'lookup' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Controls_Paging" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#FillRepeater" Kind="Event" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="Breaking">
             <Issue Name="First" Certainty="95" Level="Error">Declare the first parameter of 'FillRepeaterHandler' as an object named 'sender'.</Issue>
             <Issue Name="Second" Certainty="95" Level="Error">Declare the second parameter of 'FillRepeaterHandler' as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Controls_TermsandConditions" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SetValue(System.Guid,System.Double)" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="TermsandConditions.ascx.cs" Line="12">In method 'Controls_TermsandConditions.SetValue(Guid, double)', call System.IDisposable.Dispose on object 'new TradeClient()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Controls_WareHousePicker" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ddlWareHouseType_SelectedIndexChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="WareHousePicker.ascx.cs" Line="62">In method 'Controls_WareHousePicker.ddlWareHouseType_SelectedIndexChanged(object, EventArgs)', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="WareHousePicker.ascx.cs" Line="43">In method 'Controls_WareHousePicker.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="WareHousePicker.ascx.cs" Line="48">In method 'Controls_WareHousePicker.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Controls_WHRHistory" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Controls" File="WHRHistory.ascx.cs" Line="23">In method 'Controls_WHRHistory.InitializeControls()', call System.IDisposable.Dispose on object 'sec' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\senait.balkew\AppData\Local\Temp\tmp278C.tmp.cadir\bin\App_Web_hi0jr0mr.dll">
   <Modules>
    <Module Name="app_web_hi0jr0mr.dll">
     <Namespaces>
      <Namespace Name="ECX.CD.UI">
       <Types>
        <Type Name="BankAccountUI" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnFinish_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="BankAccount.aspx.cs" Line="393">Object 'scope' can be disposed more than once in method 'BankAccountUI.btnFinish_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 393</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#fvBankAccount_ItemInserted(System.Object,System.Web.UI.WebControls.FormViewInsertedEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="BankAccount.aspx.cs" Line="225">In method 'BankAccountUI.fvBankAccount_ItemInserted(object, FormViewInsertedEventArgs)', call System.IDisposable.Dispose on object 'new AuthorizedMembershipLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBankBranches(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="BankAccount.aspx.cs" Line="571">In method 'BankAccountUI.GetBankBranches(string, string)', object 'lookup' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBanks(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="BankAccount.aspx.cs" Line="539">In method 'BankAccountUI.GetBanks(string, string)', object 'lookup' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pages_ExtendPUNExpiryDate" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PopulateItems()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ExtendPUNExpiryDate.aspx.cs" Line="59">In method 'Pages_ExtendPUNExpiryDate.PopulateItems()', object 'items' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'items' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ExtendPUNExpiryDate.aspx.cs" Line="60">In method 'Pages_ExtendPUNExpiryDate.PopulateItems()', call System.IDisposable.Dispose on object 'ecxLookup' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ExtendPUNExpiryDate.aspx.cs" Line="58">In method 'Pages_ExtendPUNExpiryDate.PopulateItems()', call System.IDisposable.Dispose on object 'msl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pages_RequestPUNEdit" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GetItems()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="RequestPUNEdit.aspx.cs" Line="143">In method 'Pages_RequestPUNEdit.GetItems()', object 'ret' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ret' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Search()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="RequestPUNEdit.aspx.cs" Line="59">In method 'Pages_RequestPUNEdit.Search()', object 'items' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'items' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="RequestPUNEdit.aspx.cs" Line="60">In method 'Pages_RequestPUNEdit.Search()', call System.IDisposable.Dispose on object 'ecxLookup' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="RequestPUNEdit.aspx.cs" Line="58">In method 'Pages_RequestPUNEdit.Search()', call System.IDisposable.Dispose on object 'msl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pages_ViewPUN" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ViewPUN.aspx.cs" Line="50">In method 'Pages_ViewPUN.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Search(System.Int32)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ViewPUN.aspx.cs" Line="132">In method 'Pages_ViewPUN.Search(int)', call System.IDisposable.Dispose on object 'ecxLookup' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ViewPUN.aspx.cs" Line="131">In method 'Pages_ViewPUN.Search(int)', call System.IDisposable.Dispose on object 'msl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\senait.balkew\AppData\Local\Temp\tmp278C.tmp.cadir\bin\App_Web_qiguanxh.dll">
   <Modules>
    <Module Name="app_web_qiguanxh.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="IF_AuthoriseForeclosure" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="AuthoriseForeclosure.aspx.cs" Line="56">In method 'IF_AuthoriseForeclosure.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IF_AuthorisePRML" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="AuthorisePRML.aspx.cs" Line="60">In method 'IF_AuthorisePRML.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IF_ConfirmForeclosure" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="ConfirmForeclosure.aspx.cs" Line="73">In method 'IF_ConfirmForeclosure.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IF_Default2" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#Page_Load(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="Default2.aspx.cs" Line="13">In method 'IF_Default2.Page_Load(object, EventArgs)', object 'tbl' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'tbl' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IF_ViewPRML" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="ViewPRML.aspx.cs" Line="50">In method 'IF_ViewPRML.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IF_ViewUP" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="ViewUP.aspx.cs" Line="44">In method 'IF_ViewUP.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ECX.CD.UI">
       <Types>
        <Type Name="IF_AuthoriseLNS" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="AuthoriseLNS.aspx.cs" Line="40">In method 'IF_AuthoriseLNS.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IF_AuthorisePR" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="AuthorisePR.aspx.cs" Line="41">In method 'IF_AuthorisePR.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IF_ConfirmLNS" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="ConfirmLNS.aspx.cs" Line="41">In method 'IF_ConfirmLNS.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateItems()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="ConfirmLNS.aspx.cs" Line="50">In method 'IF_ConfirmLNS.PopulateItems()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Save()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="ConfirmLNS.aspx.cs" Line="103">In method 'IF_ConfirmLNS.Save()', call System.IDisposable.Dispose on object 'items' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="IF_ConfirmPR" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="ConfirmPR.aspx.cs" Line="40">In method 'IF_ConfirmPR.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateItems()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="ConfirmPR.aspx.cs" Line="49">In method 'IF_ConfirmPR.PopulateItems()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Save()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\IF" File="ConfirmPR.aspx.cs" Line="117">In method 'IF_ConfirmPR.Save()', call System.IDisposable.Dispose on object 'pss' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\senait.balkew\AppData\Local\Temp\tmp278C.tmp.cadir\bin\App_Web_s2puexkv.dll">
   <Modules>
    <Module Name="app_web_s2puexkv.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Reports_DeliveryNotice" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#IsInputValid()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Reports" File="DeliveryNotice.aspx.cs" Line="102">In method 'Reports_DeliveryNotice.IsInputValid()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Reports_MCPReportViewer" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#GenerateMCP()" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Reports" File="MCPReportViewer.aspx.cs" Line="171">In method 'Reports_MCPReportViewer.GenerateMCP()', object 'mcp' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'mcp' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#TakeCompleteSnapshot()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Reports" File="MCPReportViewer.aspx.cs" Line="149">In method 'Reports_MCPReportViewer.TakeCompleteSnapshot()', call System.IDisposable.Dispose on object 'mcp' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\senait.balkew\AppData\Local\Temp\tmp278C.tmp.cadir\bin\App_Web_xzxwrdu0.dll">
   <Modules>
    <Module Name="app_web_xzxwrdu0.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Pages_CloseBankAccount" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnClose_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="CloseBankAccount.aspx.cs" Line="33">In method 'Pages_CloseBankAccount.btnClose_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'membership' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pages_ViewGINs" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#BindWarhouseDropdown()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ViewGINs.aspx.cs" Line="30">In method 'Pages_ViewGINs.BindWarhouseDropdown()', call System.IDisposable.Dispose on object 'l' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PreparedForSearch()" Kind="Method" Static="False" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ViewGINs.aspx.cs" Line="112">In method 'Pages_ViewGINs.PreparedForSearch()', call System.IDisposable.Dispose on object 'gin' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pages_ViewPUNExtensionReport" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnExport_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ViewPUNExtensionReport.aspx.cs" Line="60">In method 'Pages_ViewPUNExtensionReport.btnExport_Click(object, EventArgs)', call System.IDisposable.Dispose on object 'm_stream' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ECX.CD.UI">
       <Types>
        <Type Name="Pages_ApproveWHREdit" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PopulateItems()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="ApproveWHREdit.aspx.cs" Line="41">In method 'Pages_ApproveWHREdit.PopulateItems()', call System.IDisposable.Dispose on object 'new ECXEngine()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pages_CancelWHR" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PopulateItems()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="CancelWHR.aspx.cs" Line="54">In method 'Pages_CancelWHR.PopulateItems()', call System.IDisposable.Dispose on object 'new ECXEngine()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pages_MembersAllowedToTrade" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#ddlCommodity_SelectedIndexChanged(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="MembersAllowedToTrade.aspx.cs" Line="184">In method 'Pages_MembersAllowedToTrade.ddlCommodity_SelectedIndexChanged(object, EventArgs)', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#dtgMembers_RowDataBound(System.Object,System.Web.UI.WebControls.GridViewRowEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="MembersAllowedToTrade.aspx.cs" Line="197">In method 'Pages_MembersAllowedToTrade.dtgMembers_RowDataBound(object, GridViewRowEventArgs)', call System.IDisposable.Dispose on object 'new MemberShipLookUp()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetItems()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="MembersAllowedToTrade.aspx.cs" Line="114">In method 'Pages_MembersAllowedToTrade.GetItems()', object 'mats' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'mats' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="MembersAllowedToTrade.aspx.cs" Line="51">In method 'Pages_MembersAllowedToTrade.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="MembersAllowedToTrade.aspx.cs" Line="54">In method 'Pages_MembersAllowedToTrade.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="MembersAllowedToTrade.aspx.cs" Line="58">In method 'Pages_MembersAllowedToTrade.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pages_ViewPUN" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#PopulateItems()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="CancelPUN.aspx.cs" Line="58">In method 'Pages_ViewPUN.PopulateItems()', call System.IDisposable.Dispose on object 'new ECXEngine()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Search()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="CancelPUN.aspx.cs" Line="71">In method 'Pages_ViewPUN.Search()', call System.IDisposable.Dispose on object 'msl' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="CancelPUN.aspx.cs" Line="82">In method 'Pages_ViewPUN.Search()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
  <Target Name="C:\Users\senait.balkew\AppData\Local\Temp\tmp278C.tmp.cadir\bin\App_Web_zvym1dyr.dll">
   <Modules>
    <Module Name="app_web_zvym1dyr.dll">
     <Namespaces>
      <Namespace Name="">
       <Types>
        <Type Name="Pages_RequestBankAccountModification" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#btnFinish_Click(System.Object,System.EventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="RequestBankAccountModification.aspx.cs" Line="376">Object 'scope' can be disposed more than once in method 'Pages_RequestBankAccountModification.btnFinish_Click(object, EventArgs)'. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 376</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#fvBankAccount_ItemInserted(System.Object,System.Web.UI.WebControls.FormViewInsertedEventArgs)" Kind="Method" Static="False" Accessibility="Family" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="RequestBankAccountModification.aspx.cs" Line="212">In method 'Pages_RequestBankAccountModification.fvBankAccount_ItemInserted(object, FormViewInsertedEventArgs)', call System.IDisposable.Dispose on object 'new AuthorizedMembershipLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBankBranches(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="RequestBankAccountModification.aspx.cs" Line="554">In method 'Pages_RequestBankAccountModification.GetBankBranches(string, string)', object 'lookup' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetBanks(System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="RequestBankAccountModification.aspx.cs" Line="522">In method 'Pages_RequestBankAccountModification.GetBanks(string, string)', object 'lookup' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'lookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
      <Namespace Name="ECX.CD.UI">
       <Types>
        <Type Name="Pages_PUNDetail" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#CreatePUN()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="PUNDetail.aspx.cs" Line="343">In method 'Pages_PUNDetail.CreatePUN()', call System.IDisposable.Dispose on object 'memLookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPUNDrivers(System.String&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="PUNDetail.aspx.cs" Line="457">In method 'Pages_PUNDetail.GetPUNDrivers(out string)', object 'ret' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ret' before all references to it are out of scope.</Issue>
            </Message>
            <Message TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="MissingFormatItem" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="PUNDetail.aspx.cs" Line="476">Method 'Pages_PUNDetail.GetPUNDrivers(out string)' calls 'string.Format(string, params object[])' and does not provide a format item for argument "7". The provided format string is: '"Driver Id = {0}, PickupNoticeId = {1}, DriverName = {2}, LicenseNumber = {3}, Tr..."'</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#GetPUNWR(System.String&amp;)" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="ExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="PUNDetail.aspx.cs" Line="488">In method 'Pages_PUNDetail.GetPUNWR(out string)', object 'ret' is not disposed along all exception paths. Call System.IDisposable.Dispose on object 'ret' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulateControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="PUNDetail.aspx.cs" Line="195">In method 'Pages_PUNDetail.PopulateControls()', call System.IDisposable.Dispose on object 'ecxLookup' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="PUNDetail.aspx.cs" Line="194">In method 'Pages_PUNDetail.PopulateControls()', call System.IDisposable.Dispose on object 'memLookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#PopulatePUNWRs()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="PUNDetail.aspx.cs" Line="234">In method 'Pages_PUNDetail.PopulatePUNWRs()', call System.IDisposable.Dispose on object 'ecxlu' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="PUNDetail.aspx.cs" Line="235">In method 'Pages_PUNDetail.PopulatePUNWRs()', call System.IDisposable.Dispose on object 'mlu' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="Pages_WarehouseReciept" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#InitializeControls()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="WarehouseReciept.aspx.cs" Line="62">In method 'Pages_WarehouseReciept.InitializeControls()', call System.IDisposable.Dispose on object 'new ECXLookup()' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#Search()" Kind="Method" Static="False" Accessibility="Private" ExternallyVisible="False">
           <Messages>
            <Message TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000" Status="Active" Created="2013-10-14 14:10:34Z" FixCategory="DependsOnFix">
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="WarehouseReciept.aspx.cs" Line="74">In method 'Pages_WarehouseReciept.Search()', call System.IDisposable.Dispose on object 'eCXLookup' before all references to it are out of scope.</Issue>
             <Issue Name="NonExceptionEdge" Certainty="75" Level="Warning" Path="c:\Users\senait.balkew\Desktop\Projects\CD Application\CD Application\Pages" File="WarehouseReciept.aspx.cs" Line="75">In method 'Pages_WarehouseReciept.Search()', call System.IDisposable.Dispose on object 'membershipLookup' before all references to it are out of scope.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="DeclareEventHandlersCorrectly" Category="Microsoft.Design" CheckId="CA1009">
   <Name>Declare event handlers correctly</Name>
   <Description>By convention, .NET events have two parameters that specify the event sender and event data. Event handler signatures should follow this form: void MyEventHandler(object sender, EventArgs e). The 'sender' parameter is always of type System.Object, even if it is possible to employ a more specific type. The 'e' parameter is always of type System.EventArgs. Events that do not provide event data should use the System.EventHandler delegate type. Event handlers return void so that they can send each event to multiple target methods. Any value returned by a target would be lost after the first call.</Description>
   <Resolution Name="First">Declare the first parameter of {0} as an object named 'sender'.</Resolution>
   <Resolution Name="Second">Declare the second parameter of {0} as an EventArgs, or an instance of a type that extends EventArgs, named 'e'.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182133(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DisposableFieldsShouldBeDisposed" Category="Microsoft.Usage" CheckId="CA2213">
   <Name>Disposable fields should be disposed</Name>
   <Description>If a type that implements IDisposable owns fields that also implement IDisposable, the encapsulating type's Dispose() implementation should call Dispose() on each disposable field.</Description>
   <Resolution Name="Default">{0} contains field {1} that is of IDisposable type: {2}. Change the Dispose method on {0} to call Dispose or Close on this field.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182328(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Dispose objects before losing scope" Category="Microsoft.Reliability" CheckId="CA2000">
   <Name>Dispose objects before losing scope</Name>
   <Description>If a disposable object is not explicitly disposed before all references to it are out of scope, the object will be disposed at some indeterminate time when the garbage collector runs the finalizer of the object. Because an exceptional event might occur that will prevent the finalizer of the object from running, the object should be explicitly disposed instead.</Description>
   <Resolution Name="ExceptionEdge">In method {0}, object {1} is not disposed along all exception paths. Call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Resolution Name="NonExceptionEdge">In method {0}, call System.IDisposable.Dispose on object {1} before all references to it are out of scope.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182289(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Do not dispose objects multiple times" Category="Microsoft.Usage" CheckId="CA2202">
   <Name>Do not dispose objects multiple times</Name>
   <Description>A correctly implemented Dispose method can be called multiple times without throwing an exception. However, this is not guaranteed and to avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.</Description>
   <Resolution Name="Default">Object {0} can be disposed more than once in method {1}. To avoid generating a System.ObjectDisposedException you should not call Dispose more than one time on an object.: Lines: 320</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182334(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="DoNotIndirectlyExposeMethodsWithLinkDemands" Category="Microsoft.Security" CheckId="CA2122">
   <Name>Do not indirectly expose methods with link demands</Name>
   <Description>Do not wrap a method protected by a LinkDemand with a method that does not perform a security check. A LinkDemand checks the permissions of the immediate caller rather than checking the permissions of all callers in the call stack. In this case, the permissions of the wrapper method will be checked. If the wrapper method does not, itself, check the permissions of callers higher in the call stack, malicious code might be able to execute the wrapped function even though it lacks permission to do so.</Description>
   <Resolution Name="Default">{0} calls into {1} which has a LinkDemand. By making this call, {1} is indirectly exposed to user code. Review the following call stack that might expose a way to circumvent security protection: {2}</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182303(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="33">CriticalError</MessageLevel>
   <File Name="securityrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="ImplementIDisposableCorrectly" Category="Microsoft.Design" CheckId="CA1063">
   <Name>Implement IDisposable correctly</Name>
   <Description>All IDisposable types should implement the Dispose pattern correctly.</Description>
   <Resolution Name="DisposeImplementation">Modify {0} so that it calls Dispose(true), then calls GC.SuppressFinalize on the current object instance ('this' or 'Me' in Visual Basic), and then returns.</Resolution>
   <Resolution Name="ProvideDisposeBool">Provide an overridable implementation of Dispose(bool) on {0} or mark the type as sealed. A call to Dispose(false) should only clean up native resources. A call to Dispose(true) should clean up both managed and native resources.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms244737(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Provide correct arguments to formatting methods" Category="Microsoft.Usage" CheckId="CA2241">
   <Name>Provide correct arguments to formatting methods</Name>
   <Description>Provide the correct number of arguments to String.Format calls.</Description>
   <Resolution Name="MissingFormatItem">Method {0} calls {1} and does not provide a format item for argument {2}. The provided format string is: '{3}'</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182361(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>Rethrow to preserve stack details</Name>
   <Description>Use the IL rethrow instruction to preserve original stack details when re-raising a caught exception.</Description>
   <Resolution Name="Default">{0} rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="Review SQL queries for security vulnerabilities" Category="Microsoft.Security" CheckId="CA2100">
   <Name>Review SQL queries for security vulnerabilities</Name>
   <Description>A SQL command string built from user input is vulnerable to SQL injection attacks. Microsoft SQL Server and other database servers support stored procedures and parameterized SQL queries, which reduce the risk of injection attacks.</Description>
   <Resolution Name="WithNonLiterals">The query string passed to {0} in {1} could contain the following variables {2}. If any of these variables could come from user input, consider using a stored procedure or a parameterized SQL query instead of building the query with string concatenations.</Resolution>
   <Owner>RuleOwner</Owner>
   <Url>http://msdn.microsoft.com/library/ms182310(VS.100).aspx</Url>
   <Email />
   <MessageLevel Certainty="75">Warning</MessageLevel>
   <File Name="dataflowrules.dll" Version="10.0.0.0" />
  </Rule>
  <Rule TypeName="TypesThatOwnDisposableFieldsShouldBeDisposable" Category="Microsoft.Design" CheckId="CA1001">
   <Name>Types that own disposable fields should be disposable</Name>
   <Description>Types that declare disposable members should also implement IDisposable. If the type does not own any unmanaged resources, do not implement a finalizer on it.</Description>
   <Resolution Name="DependsOnFix">Implement IDisposable on {0} because it creates members of the following IDisposable types: {1}. If {0} has previously shipped, adding new members that implement IDisposable to this type is considered a breaking change to existing consumers.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182172(VS.100).aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">CriticalError</MessageLevel>
   <File Name="designrules.dll" Version="10.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
